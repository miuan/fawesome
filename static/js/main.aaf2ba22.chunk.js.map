{"version":3,"sources":["app/utils.ts","pages/public/Login/PasswordComponent.tsx","app/hooks.ts","app/reducers/userSlice.ts","pages/public/Login/Register.tsx","pages/public/Login/utils.ts","pages/public/Login/Login.tsx","pages/public/Login/ForgottenPassword.tsx","pages/public/Login/ForgottenPasswordReset.tsx","pages/public/Login/VerifyUser.tsx","pages/public/Login/PassportCallback.tsx","pages/public/Home/Home.tsx","components/Header/AdminHeader.tsx","components/Header/PublicHeader.tsx","components/Header/UserHeader.tsx","components/Header/Header.tsx","pages/user/UserDashboard/UserDashboard.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/List/FilterItem.tsx","components/List/RowItem.tsx","components/List/Row.tsx","components/Loading/Loading.tsx","components/DeleteModal/DeleteModal.tsx","components/Unauthorized/Unauthorized.tsx","components/List/Table.tsx","components/List/FilteredList.tsx","components/Editor/Editor.tsx","components/List/ConnectBase.tsx","pages/admin/Users/UsersList.tsx","pages/admin/UserRoles/UserRolesList.tsx","components/Editor/Control.tsx","pages/admin/UserRoles/UserRolesEdit.tsx","components/Image/Image.tsx","pages/user/Posts/Posts.tsx","pages/user/Posts2/Posts2.tsx","App.tsx","app/store.ts","serviceWorker.ts","app/refreshToken.ts","app/apolloClient.ts","index.tsx"],"names":["getGraphqlMonsterClientAppRoot","process","substr","length","isEmailValid","email","RegExp","test","passwordStrong","password","valid","strong","name","variant","capital","lower","number","value","percentage","uploadFile","file","a","callback","undefined","userToken","localStorage","getItem","data","FormData","append","Promise","resolve","reject","axios","post","headers","Authorization","event","error","response","message","PasswordComponent","onPasswordChange","strongPassword","Form","Group","controlId","Label","Control","type","placeholder","onChange","isInvalid","Text","ProgressBar","now","label","useAppDispatch","useDispatch","useSelector","initialState","user","token","id","roles","split","map","role","verified","Boolean","userFromStorage","state","userSlice","createSlice","reducers","changeState","action","payload","login","setItem","refreshToken","toString","r","logout","removeItem","selectUser","actions","REGISTER_MUTATION","Register","useState","setEmail","pass","setPass","copy","setCopy","history","useHistory","dispatch","useMutation","errorPolicy","registerMutation","loading","invalidEmail","setInvalidEmail","emailProbablyTaken","setEmailProbablyTaken","setStrong","invalidCopy","setInvalidCopy","onRegister","variables","register_v1","replace","console","log","data-bgimage","className","data-scroll-speed","method","Alert","to","target","c","Button","onClick","disabled","LOGIN_QL","Login","invalidPass","setInvalidPass","query","URLSearchParams","location","search","path","get","loginMutation","onLogin","login_v1","onBackClick","goBack","href","FORGOTTEN_PASSWORD_REQUEST_MUTATION","ForgottenPassword","emailSent","setEmailSent","doForgottenPassword","onRequestSend","FORGOTTEN_PASSWORD_CHECK_MUTATION","FORGOTTEN_PASSWORD_RESET_MUTATION","ForgotenPasswordReset","match","_","setPassword","doForgottenPasswordCheck","loadingForgottenPasswordCheck","dataForgottenPasswordCheck","doForgottenPasswordReset","useEffect","doCheck","onReset","reset","check","status","isPasswordValid","VERIFY_EMAIL_MUTATION","gql","VerifyUser","verifyToken","setVerified","verify","verifying","verifiedError","doVerifyUser","verifyEmail_v1","setTimeout","previouslyVerified","onVerifyUser","tokenFromFacebookCode","code","PassportCallback","useLocation","codeRaw","setError","showError","errorMessage","JSON","parse","request","Home","UserHeader","onLogout","Dropdown","Toggle","Menu","Item","PublicHeader","Header","find","AdminHeader","UserDashboard","ProtectRoute","exact","children","basicOptionsName","contains","not_contains","starts_with","not_starts_with","ends_with","not_ends_with","isEmpty","FilterItem","fields","fieldSelected","setFieldSelected","optionSelected","setOptionSelected","filterText","setFilterText","filter","setFilter","doFilter","useCallback","f","processFilter","field","option","text","gc","o","o2","go","InputGroup","DropdownButton","as","Prepend","title","Object","getOwnPropertyNames","e","ListRowItem","item","fieldDesc","names","element","getElementFromField","component","push","reduce","p","ListRow","onDelete","showDelete","onEdit","getEditLink","doEdit","editLink","useMemo","toLowerCase","Fragment","tabIndex","onKeyPress","size","Loading","what","DeleteModal","show","onHide","categoryName","deleteObjectId","deleteObjectName","deleting","showMe","setShowMe","lastShow","setLastShow","onHideAction","Modal","closeButton","Title","Body","Footer","Unauthorized","where","Table","adminMode","queries","unauthorized","setUnauthorized","deleteObject","setDeleteObject","showDeleteDialog","setShowDeleteDialog","deletingOnDeleteDialog","setDeletingOnDeleteDialog","setLoading","setData","useQuery","ADMIN_LIST_QUERY","USER_LIST_QUERY","onError","onCompleted","d","dataFields","userRefetch","refetch","userLoading","DELETE_MUTATION","deleteProject","onHideDidaloDelete","deleteProjectMutation","obj","responsive","projectItem","createFilter","AND","addAnd","node","filterDestructNode","n","filterDestruct","fo","params","FilteredList","userId","staticFilter","onCreate","createDefaultFilter","defaultFilter","user_every","filterDestructed","onFilterChange","getDataFromRaw","rawData","keys","Editor","form","renameError","onUpdated","updateCache","localId","setLocalId","errors","setErrors","storedData","setStoredData","handleError","incommingError","incomingErrors","raw","skipLoading","QUERY","skip","loadedDataRaw","loadedData","updateDataFromLoaded","CREATE_MUTATION","update","createProjectMutation","UPDATE_MUTATION","updateProjectMutation","onSubmit","ConnectBase","elementTitle","setTitle","iraw","final","checked","indexOf","ADD","addMutation","REMOVE","removeMutation","updated","updateTitle","id1","id2","onChecked","Check","QUERY_ALL_USERS_ADMIN","USER_ROLE_QUERY","MUTATION_ADD_USER_ROLE_TO_USER","MUTATION_REMOVE_USER_ROLE_FROM_USER","MUTATION_REMOVE_USER","ConnectRole","UsersList","UserRoleList","required","register","formState","setValue","touchedFields","dirtyFields","FormControl","Feedback","UserRoleForm","reactForm","userRoleId","graphQlError","useForm","handleSubmit","getValues","watch","UserRoleEdit","useParams","Image","publicKey","_width","width","_height","height","style","overflow","alt","objectFit","minHeight","src","ALL_QUERY","REMOVE_MUTATION","handeUpload","Posts","setText","postForRemoveId","setPostForRemoveId","createPost","createError","loadingError","removePost","removeError","uploadError","setUploadError","lastUploadedImage","setLastUploadedImage","addPost","sendingData","image","err","uploadedImage","margin","allPost","idx","REMOVE_IMAGE_MUTATION","color","hasImages","backgroundColor","CarouselImages","images","Carousel","Caption","PreviewImage","setColor","removeImage","setImages","all","uploadedImages","imagesIds","ui","postForRemove","allPost_v2","removeAllImages","defaultValue","htmlFor","files","added","Array","from","preview","URL","createObjectURL","display","multiple","rows","i","onImageRemove","aria-hidden","App","Posts2","ForgottenPasswordReset","ProtectedRoute","UserRolesList","store","configureStore","reducer","userReducer","window","hostname","retryLink","RetryLink","attempts","count","operation","delay","Math","random","isRefreshing","pendingRequests","refreshTokenAction","forward","forward$","fromPromise","then","refreshToken_v1","oldHeaders","getContext","setContext","authorization","catch","finally","flatMap","authLink","httpLink","createHttpLink","uri","erroLink","graphQLErrors","networkError","some","tokenExpired","locations","apolloClient","ApolloClient","link","ApolloLink","cache","InMemoryCache","defaultOptions","watchQuery","mutate","ReactDOM","render","StrictMode","ApolloProvider","client","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aaf2ba22.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const getGraphqlMonsterClientAppRoot = () =>\r\n  process.env.REACT_APP_HOST?.substr(0, process.env.REACT_APP_HOST?.length - 8)\r\n\r\nexport const isEmailValid = (email: string) => {\r\n  if (process.env.NODE_ENV === 'development') return true\r\n\r\n  return new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(email)\r\n}\r\n\r\nexport const isPasswordValid = (password: string) => {\r\n  //if(process.env.NODE_ENV === 'development') return true\r\n\r\n  const regularExpression = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/\r\n  return regularExpression.test(password)\r\n}\r\n\r\nexport interface IPasswordStrongResult {\r\n  valid: boolean\r\n  strong: number\r\n  name: string\r\n  variant: string\r\n}\r\nexport const passwordStrong = (password: string): IPasswordStrongResult => {\r\n  const length = password.length\r\n\r\n  if (length < 1) {\r\n    return {\r\n      valid: false,\r\n      strong: 0,\r\n      name: '',\r\n      variant: 'danger',\r\n    } as IPasswordStrongResult\r\n  }\r\n\r\n  if (length >= 15) {\r\n    return {\r\n      valid: true,\r\n      strong: 100,\r\n      name: 'strong',\r\n      variant: 'success',\r\n    } as IPasswordStrongResult\r\n  }\r\n\r\n  const capital = /(?=.*[A-Z]){2,}/.test(password) ? 2 : /(?=.*[A-Z])/.test(password) ? 1 : 0\r\n  const lower = /(?=.*[a-z]){2,}/.test(password) ? 2 : /(?=.*[a-z])/.test(password) ? 1 : 0\r\n  const number = /(?=.*[0-9]){2,}/.test(password) ? 2 : /(?=.*[0-9])/.test(password) ? 1 : 0\r\n  const special = /(?=.*[!@#$%^&*]){2,}/.test(password)\r\n    ? 2\r\n    : /(?=.*[!@#$%^&*])/.test(password)\r\n    ? 1\r\n    : 0\r\n\r\n  const value = capital + lower + number + special\r\n\r\n  const valid = (length > 7 && lower > 0 && number > 0) || process.env.NODE_ENV === 'development'\r\n  let percentage = value + length / 4\r\n  if (percentage > 10) percentage = 10\r\n\r\n  return {\r\n    valid,\r\n    strong: percentage * 10,\r\n    name: value > 6 ? 'strong' : value > 4 ? 'intermediate' : valid ? 'weak' : 'poor',\r\n    variant: percentage > 6 ? 'success' : valid ? 'warning' : 'danger',\r\n  } as IPasswordStrongResult\r\n}\r\n\r\nexport type TUploadFileCallback = (err: any, data: any)=>void | null | undefined\r\nexport const uploadFile = (name='files') => async (file:any, callback:TUploadFileCallback|null| undefined = undefined) => {\r\n  const userToken = localStorage.getItem('user.token')\r\n  // const files = event.currentTarget?.files || []\r\n  // const file = files[0]\r\n\r\n  const data = new FormData()\r\n  data.append('file', file)\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const event = await axios.post(`${getGraphqlMonsterClientAppRoot()}/upload`, data, {\r\n        // authorization: Bearer\r\n        headers: {\r\n          Authorization: `Bearer ${userToken}`,\r\n        },\r\n      })\r\n\r\n      if(callback){\r\n        callback(null, event.data)\r\n      }\r\n      resolve(event.data)\r\n    } catch(ex) {\r\n      let error = ex\r\n      if(ex.response?.data?.error?.message){\r\n        error = ex.response?.data.error\r\n      }\r\n\r\n      if(error.message === \"Network Error\"){\r\n        error.message = 'File is too large (max file size is 1Mb)'\r\n      }\r\n\r\n      if(callback){\r\n        callback(error, null)\r\n      }\r\n      reject(error)\r\n    }\r\n    \r\n  })\r\n}\r\n","import React from 'react'\r\nimport { Form, ProgressBar } from 'react-bootstrap'\r\nimport { IPasswordStrongResult } from '../../../app/utils'\r\n\r\nexport interface IPasswordComponent {\r\n    strongPassword: IPasswordStrongResult,\r\n    password: string\r\n    onPasswordChange: (arg:any) => void\r\n}\r\n\r\nexport const PasswordComponent:React.FC<IPasswordComponent> = ({onPasswordChange, password, strongPassword}) => (\r\n    <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={onPasswordChange}\r\n            value={password}\r\n            isInvalid={!strongPassword.valid}\r\n        />\r\n        <Form.Text>Make sure it's at least 15 characters OR at least 8 characters including a number and a lowercase letter</Form.Text>\r\n        <ProgressBar now={strongPassword.strong} label={strongPassword.name} variant={strongPassword.variant}/>\r\n    </Form.Group>\r\n)\r\n\r\nexport default PasswordComponent","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { RootState } from '../store'\r\n\r\nexport interface UserToken {\r\n  token: string\r\n  refreshToken: string\r\n  user: User\r\n}\r\n\r\nexport interface User {\r\n  id: string\r\n  email: string\r\n  verified: boolean\r\n  roles: UserRole[]\r\n  selectedOrgId?: string\r\n}\r\n\r\nexport interface UserRole {\r\n  name: string\r\n}\r\n\r\nexport interface UserState {\r\n  user?: UserWithToken\r\n  state: 'no-user' | 'processing' | 'user-login'\r\n}\r\n\r\nexport type UserWithToken = User & {\r\n  token: string\r\n}\r\n\r\nconst userToStorage = (userToken: UserToken) => {\r\n  localStorage.setItem('user.token', userToken.token)\r\n  localStorage.setItem('user.refreshToken', userToken.refreshToken)\r\n  localStorage.setItem('user.id', userToken.user.id)\r\n  localStorage.setItem('user.email', userToken.user.email)\r\n  localStorage.setItem('user.verified', Boolean(userToken.user.verified).toString())\r\n  localStorage.setItem('user.roles', userToken.user.roles.map((r) => r.name).toString())\r\n}\r\n\r\nconst removeUserFromStorage = () => {\r\n  localStorage.removeItem('user.refreshToken')\r\n  localStorage.removeItem('user.token')\r\n  localStorage.removeItem('user.id')\r\n  // localStorage.removeItem('user.email')\r\n  localStorage.removeItem('user.verified')\r\n  localStorage.removeItem('user.roles')\r\n}\r\n\r\nconst userFromStorage = () => {\r\n  const token = localStorage.getItem('user.token')\r\n  if (!token) {\r\n    return\r\n  }\r\n\r\n  return {\r\n    token,\r\n    email: localStorage.getItem('user.email'),\r\n    id: localStorage.getItem('user.id'),\r\n    roles: localStorage\r\n      .getItem('user.roles')\r\n      ?.split(',')\r\n      .map((role) => ({ name: role })),\r\n    verified: Boolean(localStorage.getItem('user.verified')),\r\n  } as UserWithToken\r\n}\r\n\r\nconst initialSelected = localStorage.getItem('organization.selected')\r\n\r\nconst initialState: UserState = {\r\n  user: userFromStorage(),\r\n  state: 'no-user',\r\n}\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    changeState: (state, action: PayloadAction<UserState['state']>) => {\r\n      state.state = action.payload\r\n    },\r\n    login(state, action: PayloadAction<UserToken>) {\r\n      userToStorage(action.payload)\r\n      state.user = {\r\n        id: action.payload.user.id,\r\n        token: action.payload.token,\r\n        email: action.payload.user.email,\r\n        roles: action.payload.user.roles,\r\n        verified: Boolean(action.payload.user.verified),\r\n      } as UserWithToken\r\n    },\r\n    logout(state) {\r\n      removeUserFromStorage()\r\n      delete state.user\r\n    },\r\n  },\r\n})\r\n\r\nexport const selectUser = (state: RootState) => state.user.user\r\n// Action creators are generated for each case reducer function\r\nexport const { login, logout, changeState } = userSlice.actions\r\n\r\nexport default userSlice.reducer\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Modal, Form, Alert, Button, ProgressBar } from \"react-bootstrap\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { isEmailValid, passwordStrong } from \"../../../app/utils\";\r\nimport PasswordComponent from \"./PasswordComponent\";\r\nimport { loader } from 'graphql.macro';\r\nimport { useAppDispatch } from \"../../../app/hooks\";\r\nimport { login, UserToken, changeState } from \"../../../app/reducers/userSlice\";\r\n\r\nexport const REGISTER_MUTATION = loader('./graphql/register.gql')\r\n\r\nexport const Register: React.FC = () => {\r\n  const defaultPath = process.env.REACT_APP_DEFAULT_USER_PATH || '/user/dashboard'\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [copy, setCopy] = useState(\"\");\r\n\r\n  const history = useHistory()\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [registerMutation, { loading, data, error }] = useMutation(REGISTER_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const [invalidEmail, setInvalidEmail] = useState(false);\r\n  const [emailProbablyTaken, setEmailProbablyTaken] = useState(false);\r\n  const [strong, setStrong] = useState(passwordStrong(''))\r\n\r\n  const [invalidCopy, setInvalidCopy] = useState(false);\r\n\r\n  const onRegister = async () => {\r\n    if (!isEmailValid(email)) {\r\n      return setInvalidEmail(true)\r\n    }\r\n\r\n    if (pass !== copy) {\r\n      setInvalidCopy(true)\r\n      return\r\n    }\r\n\r\n    try {\r\n      dispatch(changeState('processing'))\r\n      const { data } = await registerMutation({ variables: { email, pass } })\r\n      const userToken = data.register_v1 as UserToken\r\n\r\n      dispatch(login(userToken))\r\n\r\n      history.replace(defaultPath)\r\n    } catch (ex) {\r\n      console.log('onError', data)\r\n      setEmailProbablyTaken(true)\r\n    }\r\n\r\n  };\r\n\r\n  const onEmailChange = (event: any) => {\r\n    setEmail(event.target.value);\r\n    setInvalidEmail(false);\r\n    setEmailProbablyTaken(false)\r\n  };\r\n\r\n  const onPasswordChange = (event: any) => {\r\n    const pass = event.target.value as string\r\n\r\n    setPass(pass);\r\n    setInvalidEmail(false);\r\n    setStrong(passwordStrong(pass))\r\n  };\r\n\r\n  const onCopyChange = (event: any) => {\r\n    const c = event.target.value\r\n    setCopy(c)\r\n    setInvalidEmail(false)\r\n\r\n    if (c == pass) {\r\n      setInvalidCopy(false)\r\n    }\r\n  };\r\n\r\n  return (<>\r\n    <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n      <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                <div className=\"col-md-12 text-center\">\r\n                  <h1>User Registration</h1>\r\n                  <p>All big things starting here</p>\r\n                </div>\r\n                <div className=\"clearfix\"></div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <form name=\"contactForm\" id='contact_form' className=\"form-border\" method=\"post\" action='blank.php'>\r\n\r\n\r\n              <Form>\r\n                {invalidEmail && (<Alert variant={\"danger\"}>Email is not in good shape...</Alert>)}\r\n                {emailProbablyTaken && (<Alert variant={\"danger\"}>Email is probably taken, did you <Link to=\"/forgotten-password\">forgotten password</Link>?</Alert>)}\r\n                {invalidCopy && (<Alert variant={\"danger\"}>The retyped password is not the same</Alert>)}\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    onChange={onEmailChange}\r\n                    value={email}\r\n                    isInvalid={invalidEmail}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                <PasswordComponent password={pass} onPasswordChange={onPasswordChange} strongPassword={strong} />\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Re-Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Retype Password\"\r\n                    onChange={onCopyChange}\r\n                    value={copy}\r\n                    isInvalid={invalidCopy}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n\r\n              <div id='submit' className=\"pull-left\">\r\n                {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onRegister()}>Register</Button>}\r\n                {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n\r\n                <div className=\"clearfix\"></div>\r\n\r\n                <div className=\"spacer-single\"></div>\r\n\r\n                {/* <ul className=\"list s3\">\r\n                  <li>Or login with:</li>\r\n                  <li><a href=\"#\">Facebook</a></li>\r\n                  <li><a href=\"#\">Google</a></li>\r\n                  <li><a href=\"#\">Instagram</a></li>\r\n                </ul> */}\r\n\r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","\r\n\r\nexport const isEmailValid = (email: string) => {\r\n    if(process.env.NODE_ENV === 'development') return true\r\n\r\n    return new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(email)\r\n}\r\n\r\nexport const isPasswordValid = (password: string) => {\r\n    //if(process.env.NODE_ENV === 'development') return true\r\n\r\n    const regularExpression = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/\r\n    return regularExpression.test(password)\r\n}\r\n\r\nexport interface IPasswordStrongResult {\r\n    valid: boolean\r\n    strong: number\r\n    name: string\r\n    variant: string\r\n}\r\nexport const passwordStrong = (password: string):IPasswordStrongResult => {\r\n    const length = password.length\r\n\r\n    if(length < 1){\r\n        return {\r\n           valid: false,\r\n           strong: 0,\r\n           name: '',\r\n           variant: 'danger'  \r\n        } as IPasswordStrongResult\r\n    }\r\n\r\n    if(length >= 15){\r\n        return {\r\n            valid: true,\r\n            strong: 100,\r\n            name: 'strong',\r\n            variant: 'success' \r\n         } as IPasswordStrongResult\r\n    }\r\n\r\n    const capital = /(?=.*[A-Z]){2,}/.test(password) ? 2 : ( /(?=.*[A-Z])/.test(password) ? 1 : 0)\r\n    const lower = /(?=.*[a-z]){2,}/.test(password) ? 2 : ( /(?=.*[a-z])/.test(password) ? 1 : 0)\r\n    const number = /(?=.*[0-9]){2,}/.test(password) ? 2 : ( /(?=.*[0-9])/.test(password) ? 1 : 0)\r\n    const special = /(?=.*[!@#$%^&*]){2,}/.test(password) ? 2 : ( /(?=.*[!@#$%^&*])/.test(password) ? 1 : 0)\r\n    \r\n    const value = capital + lower + number + special\r\n\r\n    const valid = (length > 7 && lower > 0 && number > 0) || process.env.NODE_ENV === 'development'\r\n    let percentage = (value+(length/4))\r\n    if(percentage > 10) percentage = 10\r\n\r\n    return {\r\n        valid,\r\n        strong: percentage * 10,\r\n        name: value > 6 ? 'strong' : (value > 4 ? 'intermediate' : (valid ? 'weak' : 'poor')),\r\n        variant: percentage > 6 ? 'success' : (valid ? 'warning' : 'danger'),\r\n    } as IPasswordStrongResult\r\n    \r\n}","import { useMutation } from '@apollo/client';\r\nimport { loader } from 'graphql.macro';\r\nimport React, { useState } from 'react';\r\nimport { Alert, Button, Form } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAppDispatch } from '../../../app/hooks';\r\nimport { changeState, login, UserToken } from '../../../app/reducers/userSlice';\r\nimport { getGraphqlMonsterClientAppRoot } from '../../../app/utils';\r\nimport { isEmailValid } from './utils';\r\n\r\nexport const LOGIN_QL = loader('./graphql/login.gql')\r\n\r\nexport const Login: React.FC = () => {\r\n    const [email, setEmail] = useState(localStorage.getItem('user.email') || '')\r\n    const [pass, setPass] = useState('')\r\n\r\n    const [invalidEmail, setInvalidEmail] = useState(false)\r\n    const [invalidPass, setInvalidPass] = useState(false)\r\n\r\n    const history = useHistory()\r\n    const query = new URLSearchParams(history.location.search)\r\n    const path = query.get('path')\r\n    const role = query.get('role')\r\n    const defaultPath = process.env.REACT_APP_DEFAULT_USER_PATH || '/user/dashboard'\r\n\r\n    const dispatch = useAppDispatch();\r\n    const [loginMutation, { loading, data, error }] = useMutation(LOGIN_QL, { errorPolicy: 'none' });\r\n\r\n    const onLogin = async () => {\r\n        if (!isEmailValid(email)) {\r\n            return setInvalidEmail(true)\r\n        }\r\n\r\n        try {\r\n            dispatch(changeState('processing'))\r\n            const { data }: any = await loginMutation({ variables: { email, pass } })\r\n            const userToken = data.login_v1 as UserToken\r\n\r\n            dispatch(login(userToken))\r\n            // go to path in case user want to reach some page before login\r\n            // or go to default path\r\n            history.replace(path || defaultPath)\r\n        } catch (e) {\r\n            setInvalidEmail(true)\r\n            setInvalidPass(true)\r\n            setPass('')\r\n        }\r\n    }\r\n\r\n    const onEmailChange = (event: any) => {\r\n        setEmail(event.target.value)\r\n        setInvalidEmail(false)\r\n        setInvalidPass(false)\r\n    }\r\n\r\n    const onPasswordChange = (event: any) => {\r\n        setPass(event.target.value)\r\n        setInvalidEmail(false)\r\n        setInvalidPass(false)\r\n    }\r\n\r\n    const onBackClick = () => {\r\n        history.goBack()\r\n    }\r\n\r\n    return (<>\r\n        <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n            <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 offset-md-2\">\r\n                            <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                                <div className=\"col-md-12 text-center\">\r\n                                    <h1>User Login</h1>\r\n                                    <p>We was missed you already</p>\r\n                                    {role && <Alert variant={'warning'}>You trying to reach part what is under registered user with <b>{role}</b> role protection. <Link to={'/'} onClick={onBackClick}>Please take me back</Link></Alert>}\r\n                                    {(!role && path) && <Alert variant={'warning'}>You trying to reach part what is under registered user protection. <Link to={'/'} onClick={onBackClick}>Please take me back</Link></Alert>}\r\n                                </div>\r\n                                <div className=\"clearfix\"></div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n        <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 offset-md-3\">\r\n                        <Form name=\"contactForm\" id='contact_form' className=\"form-border\" >\r\n                            {!invalidPass && <h3>Login to your account</h3>}\r\n                            {invalidPass && <Alert variant={'danger'}>Email or password is not valid. Did You <Link to=\"/forgotten-password\">forgotten your password</Link>?</Alert>}\r\n                            {invalidEmail && (<Alert variant={\"danger\"}>Email is not in good shape...</Alert>)}\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter email\" onChange={onEmailChange} value={email} isInvalid={invalidEmail} />\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type='password' onChange={onPasswordChange} value={pass} isInvalid={invalidPass} />\r\n                                <Form.Text className=\"text-muted\">\r\n                                    We'll never share your password with anyone else.\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <div id='submit' className=\"pull-left\">\r\n                                {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onLogin()}>Login</Button>}\r\n                                {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n                                <div className=\"clearfix\"></div>\r\n\r\n                                <div className=\"spacer-single\"></div>\r\n\r\n                                <ul className=\"list s3\">\r\n                                    <li>Or login with:</li>\r\n                                    <li><a href={`${getGraphqlMonsterClientAppRoot()}/auth/github`}>GitHub</a></li>\r\n                                    <li><a href={`${getGraphqlMonsterClientAppRoot()}/auth/facebook`}>Facebook</a></li>\r\n                                    <li><a href={`${getGraphqlMonsterClientAppRoot()}/auth/google`}>Google</a></li>\r\n                                </ul>\r\n\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </>)\r\n}\r\n\r\nexport default Login","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Modal, Form, Alert, Button } from \"react-bootstrap\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { isEmailValid } from \"../../../app/utils\";\r\nimport { loader } from \"graphql.macro\";\r\n\r\nconst FORGOTTEN_PASSWORD_REQUEST_MUTATION = loader('./graphql/forgotten-password-request.gql');\r\n\r\nexport const ForgottenPassword: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [invalidEmail, setInvalidEmail] = useState(false);\r\n  const [emailSent, setEmailSent] = useState(false)\r\n\r\n  const history = useHistory()\r\n\r\n  const [checkResetEmail, { loading: loadingCheckResetEmail, data: checkResetEmailData, error: checkResetEmailError }] = useMutation(FORGOTTEN_PASSWORD_REQUEST_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const [doForgottenPassword, { loading, data, error }] = useMutation(FORGOTTEN_PASSWORD_REQUEST_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const onRequestSend = async () => {\r\n    setEmailSent(false)\r\n    if(email && isEmailValid(email)){\r\n      setInvalidEmail(false)\r\n      try {\r\n        const { data } = await doForgottenPassword({ variables: { email } })\r\n        setEmailSent(true)\r\n      } catch (ex) {\r\n        console.log('onError', data)\r\n        setInvalidEmail(true)\r\n      }\r\n    } else {\r\n      setInvalidEmail(true)\r\n    }\r\n  };\r\n\r\n  const onEmailChange = (event: any) => {\r\n    setEmail(event.target.value);\r\n    setInvalidEmail(false);\r\n  };\r\n\r\n  if(emailSent) {\r\n    return (\r\n      <>\r\n      <Alert variant={\"success\"}>We sent to You instruction to email {email}. Check your mailbox (don't forget check spam as well)</Alert>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (<>\r\n    <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n      <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                <div className=\"col-md-12 text-center\">\r\n                  <h1>Forgotten Password</h1>\r\n                  <p>Shortly You will be back</p>\r\n                </div>\r\n                <div className=\"clearfix\"></div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <form name=\"contactForm\" id='contact_form' className=\"form-border\" method=\"post\" action='blank.php'>\r\n\r\n\r\n              <Form>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    onChange={onEmailChange}\r\n                    value={email}\r\n                    isInvalid={invalidEmail}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                \r\n              </Form>\r\n\r\n              <div id='submit' className=\"pull-left\">\r\n                {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onRequestSend()}>Send Recovery Link</Button>}\r\n                {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n\r\n                <div className=\"clearfix\"></div>\r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default ForgottenPassword;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Modal, Form, Alert, Button, ProgressBar } from \"react-bootstrap\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { isEmailValid, isPasswordValid, passwordStrong } from \"../../../app/utils\";\r\nimport _ from \"lodash\";\r\nimport PasswordComponent from \"./PasswordComponent\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login, changeState } from \"../../../app/reducers/userSlice\";\r\nimport { loader } from \"graphql.macro\";\r\n\r\nexport const FORGOTTEN_PASSWORD_CHECK_MUTATION = loader('./graphql/forgotten-password-check.gql')\r\nexport const FORGOTTEN_PASSWORD_RESET_MUTATION = loader('./graphql/forgotten-password-reset.gql')\r\n\r\n\r\nexport const ForgotenPasswordReset: React.FC<any> = ({match}) => {\r\n  const token = _.get(match, 'params.token')\r\n  const [password, setPassword] = useState(\"\");\r\n  const [copy, setCopy] = useState(\"\");\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const [doForgottenPasswordCheck, { loading: loadingForgottenPasswordCheck, data: dataForgottenPasswordCheck, error: errorForgottenPasswordCheck }] = useMutation(FORGOTTEN_PASSWORD_CHECK_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const [doForgottenPasswordReset, { loading, data, error }] = useMutation(FORGOTTEN_PASSWORD_RESET_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  \r\n  const [invalidPass, setInvalidPass] = useState(false);\r\n  const [strong, setStrong] = useState(passwordStrong(''))\r\n  const [validPass, setValidPass] = useState(false);\r\n\r\n  const [invalidCopy, setInvalidCopy] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    const doCheck = async () => {\r\n      try{\r\n        await doForgottenPasswordCheck({ variables: {token}})\r\n      } catch(ex) {\r\n\r\n      } finally {\r\n      }\r\n      \r\n    }\r\n\r\n    doCheck()\r\n\r\n  }, [token, doForgottenPasswordCheck])\r\n\r\n  const onReset = async () => {\r\n    if(!strong.valid){\r\n      return\r\n    }\r\n\r\n    if (password !== copy) {\r\n      setInvalidCopy(true)\r\n      return\r\n    }\r\n\r\n    try {\r\n      dispatch(changeState('processing'))\r\n      const { data } = await doForgottenPasswordReset({ variables: { token, password } })\r\n      dispatch(login(data.reset))\r\n      history.replace('/user/projects')\r\n    } catch (ex) {\r\n        console.log('onError', data)\r\n        \r\n      }\r\n  \r\n  };\r\n\r\n  const onPasswordChange = (event: any) => {\r\n    const pass = event.target.value as string\r\n\r\n    setPassword(pass);\r\n    const valid = isPasswordValid(pass)\r\n    setInvalidPass(!valid);\r\n    setStrong(passwordStrong(pass))\r\n  };\r\n\r\n  const onCopyChange = (event: any) => {\r\n    const c = event.target.value\r\n    setCopy(c)\r\n    setInvalidPass(false)\r\n\r\n    if (c == password) {\r\n      setInvalidCopy(false)\r\n    }\r\n  };\r\n\r\n  if(loadingForgottenPasswordCheck){\r\n    return (<Alert variant={\"success\"}>Checking token</Alert>)\r\n  } else if ( dataForgottenPasswordCheck && dataForgottenPasswordCheck.check && dataForgottenPasswordCheck.check.status === 'valid') {\r\n    return (<>\r\n      <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n        <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 offset-md-2\">\r\n                <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <h1>User Password Reset</h1>\r\n                    <p>You will be back soon</p>\r\n                  </div>\r\n                  <div className=\"clearfix\"></div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n  \r\n      <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3\">\r\n              <form name=\"contactForm\" id='contact_form' className=\"form-border\" method=\"post\" action='blank.php'>\r\n  \r\n  \r\n                <Form>\r\n                {/* {invalidPass && (<Alert variant={\"danger\"}>The password have to contain capital letter,lower letter, a number and must be 6-16 characters long</Alert>)}   */}\r\n                {invalidCopy && (<Alert variant={\"danger\"}>The retyped password is not the same</Alert>)}\r\n                <PasswordComponent password={password} onPasswordChange={onPasswordChange} strongPassword={strong} />\r\n  \r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Re-Password</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Retype Password\"\r\n                      onChange={onCopyChange}\r\n                      value={copy}\r\n                      isInvalid={invalidCopy}\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n  \r\n                <div id='submit' className=\"pull-left\">\r\n                  {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onReset()} disabled={!strong.valid}>Reset password</Button>}\r\n                  {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n  \r\n                  <div className=\"clearfix\"></div>\r\n  \r\n  \r\n                </div>\r\n  \r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n    );\r\n  } else {\r\n    return (<Alert variant={\"danger\"}>The <b>{token}</b> is not valid or already used</Alert>)\r\n  }\r\n\r\n  \r\n};\r\n\r\nexport default ForgotenPasswordReset;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Modal, Form, Alert, Button } from \"react-bootstrap\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport * as _ from 'lodash'\r\nimport { login } from \"../../../app/reducers/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($verifyToken: String!) {\r\n    verifyEmail_v1(verifyToken: $verifyToken) {\r\n      refreshToken\r\n      token\r\n      user {\r\n        roles{name}\r\n        id,\r\n        email,\r\n        verified\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VerifyUser: React.FC<any> = ({match}) => {\r\n  const verifyToken = _.get(match, 'params.verifyToken')\r\n  const [verified, setVerified] = useState(false);\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const [verify, { loading: verifying, data, error: verifiedError }] = useMutation(VERIFY_EMAIL_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const doVerifyUser = async () => {\r\n    try {\r\n      const { data } = await verify({ variables: { verifyToken } })\r\n      dispatch(login(data.verifyEmail_v1))\r\n      setVerified(true)\r\n      localStorage.setItem('user.verifyToken', verifyToken)\r\n      setTimeout(()=>{\r\n        history.replace('/user/projects')\r\n      }, 2000)\r\n    } catch (ex) {\r\n      console.log('onError', data)\r\n    }\r\n  \r\n  };\r\n\r\n  const onVerifyUser = () => {\r\n    const previouslyVerified = localStorage.getItem('user.verifyToken')\r\n    const userVerified = localStorage.getItem('user.verified') == 'true'\r\n\r\n    // user probably comming with the same link\r\n    // what was for his first verified\r\n    if(userVerified && previouslyVerified == verifyToken) {\r\n      history.replace('/user/projects')\r\n    } else {\r\n      doVerifyUser()\r\n    }\r\n    \r\n  }\r\n\r\n  useEffect(()=>{\r\n   if(verifyToken){\r\n    onVerifyUser()\r\n   }\r\n  }, [verifyToken])\r\n  \r\n\r\n  return (<section>\r\n    <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n    <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              {verified ? (<div className=\"alert alert-success\" role=\"alert\">Your account was verified <Button>Start creating</Button></div>): null} \r\n              {verifying ? (<div className=\"alert alert-dark\" role=\"alert\">Your accont is verifing...</div>): null}\r\n              {!verifyToken || verifiedError ? ( <div className=\"alert alert-dark\" role=\"alert\">The code is invalid or already applyed</div>): null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>)\r\n};\r\n\r\nexport default VerifyUser;\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport _ from 'lodash'\r\nimport { Alert } from 'react-bootstrap'\r\nimport { getGraphqlMonsterClientAppRoot } from '../../../app/utils'\r\nimport { useAppDispatch } from '../../../app/hooks'\r\nimport { login, UserToken } from '../../../app/reducers/userSlice'\r\n\r\nexport const tokenFromFacebookCode = async (type:string, code: string) => {\r\n    return axios.get(`${getGraphqlMonsterClientAppRoot()}/auth/${type}/callback?code=${code}`)\r\n}\r\n\r\nexport const PassportCallback: React.FC<{type: string}> = ({type}) => {\r\n    const location = useLocation()\r\n    const codeRaw = _.get(location, 'search', '').split('?code=')\r\n    const code = codeRaw.length > 1 ? codeRaw[1] : ''\r\n\r\n\r\n    const history = useHistory()\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [error, setError] = useState<string>()\r\n\r\n    const showError = (errorMessage:string) => {\r\n        setError(errorMessage)\r\n        setTimeout(()=>{\r\n            history.replace('/login')\r\n        }, 4000)\r\n    }\r\n    useEffect(()=>{\r\n        const request = async () => {\r\n            try {\r\n                const data = await tokenFromFacebookCode(type, code)\r\n                dispatch(login(data as any))\r\n                history.replace('/user/projects')\r\n            } catch(ex) {\r\n                const response = JSON.parse(_.get(ex, 'request.response', '{}'))\r\n                showError(response.error?.message || ex.message)\r\n            }\r\n            \r\n           \r\n        }\r\n\r\n        if(code) request()\r\n        else showError('User denied')\r\n    }, [location])\r\n\r\n    return (<>\r\n        {error && <Alert variant={'danger'}>{type} login isn't work due \"{error}\" You will be redirect back to <Link to=\"/login\">Login</Link></Alert>}\r\n    </>)\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../../logo.svg\";\r\n// import { Counter } from './features/counter/Counter';\r\nimport \"./Home.css\";\r\nimport { Post, TPostModel } from \"./Post\";\r\n\r\nfunction Home() {\r\n  // const posts: Post[] = [{ text: \"Initial post \" }];\r\n  const [posts, setPosts] = useState<TPostModel[]>([]);\r\n  const [text, setText] = useState<string>(\"\");\r\n  //let text = \"\";\r\n\r\n  const addPost = () => {\r\n    // const newPosts = [];\r\n    // for (const p of posts) {\r\n    //   newPosts.push(p);\r\n    // }\r\n    // newPosts.push({ id: posts.length + 1, text: \"Post \" });\r\n    const newPosts = [...posts, { id: posts.length + 1, text: text }];\r\n\r\n    setText(\"\");\r\n    setPosts(newPosts);\r\n  };\r\n\r\n  const onTextChange = (event: any) => {\r\n    setText(event.target.value);\r\n    //text = event.target.value;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div><Link to={'/posts'}> Posts </Link></div>\r\n      <div><Link to={'/posts2'}> Posts V2</Link></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\nconst UserHeader = ({user, onLogout}:any) =>  ( <div className=\"header-light transparent scroll-light container\">\r\n<div className=\"row\">\r\n  <div className=\"col-md-2\">\r\n  <Dropdown>\r\n    <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n      Menu\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"/\">Home</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n\r\n  </Dropdown>\r\n\r\n  <Dropdown>\r\n    <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n      Admin\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"/admin/users\">Users</Dropdown.Item>\r\n      <Dropdown.Item href=\"/admin/roles\">Roles</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n    \r\n  </Dropdown>\r\n  </div>\r\n  <div className=\"header-text col-md-8\">\r\n    <div>\r\n      This Header only for loged user with admin role\r\n    </div>\r\n  </div>\r\n  <div className=\"col-md-2\">\r\n  <Dropdown>\r\n    <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n      User\r\n    </Dropdown.Toggle>\r\n\r\n\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"/\"><Link to=\"/user/dashboard\" >User Dashboard</Link></Dropdown.Item>\r\n      <Dropdown.Item href=\"/\"><Link className=\"\" to=\"/\" onClick={onLogout}>Logout</Link></Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n  </div>\r\n</div>\r\n</div>)\r\n\r\nexport default UserHeader","import React from 'react'\r\nimport { Button, Dropdown } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './Header.css'\r\n\r\nexport const PublicHeader = () => ( <div className=\"header-light transparent scroll-light container\">\r\n    <div className=\"row\">\r\n      <div className=\"col-md-2\">\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n          Menu\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"/\">Home</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      </div>\r\n      <div className=\"header-text col-md-8\">\r\n        <div>\r\n         This is public Header\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-2\">\r\n        <Link className=\"\" to=\"/login\">Login</Link> or <Link className=\"\" to=\"/register\">Register</Link>\r\n      </div>\r\n    </div>\r\n  </div>)\r\n\r\n\r\n\r\nexport default PublicHeader","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\nconst UserHeader = ({user, onLogout}:any) =>  ( <div className=\"header-light transparent scroll-light container\">\r\n<div className=\"row\">\r\n  <div className=\"col-md-2\">\r\n  <Dropdown>\r\n    <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n      Menu\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"/\">Home</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n  </div>\r\n  <div className=\"header-text col-md-8\">\r\n    <div>\r\n      This Header only for anybody who is logged in\r\n    </div>\r\n  </div>\r\n  <div className=\"col-md-2\">\r\n  <Dropdown>\r\n    <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n      User\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"/\"><Link to=\"/user/dashboard\" >User Dashboard</Link></Dropdown.Item>\r\n      <Dropdown.Item href=\"/\"><Link className=\"\" to=\"/\" onClick={onLogout}>Logout</Link></Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n  </div>\r\n</div>\r\n</div>)\r\n\r\nexport default UserHeader","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout, selectUser } from '../../app/reducers/userSlice'\r\nimport AdminHeader from './AdminHeader'\r\nimport PublicHeader from './PublicHeader'\r\nimport UserHeader from './UserHeader'\r\n\r\nexport const Header: React.FC = () => {\r\n  const user = useSelector(selectUser)\r\n  const dispatch = useDispatch()\r\n\r\n  const onLogout = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  if (user && user.token) {\r\n    if (user.roles.find((r) => r.name === 'admin')) return <AdminHeader user={user} onLogout={onLogout} />\r\n    else return <UserHeader user={user} onLogout={onLogout} />\r\n  }\r\n\r\n  return <PublicHeader />\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function UserDashboard() {\r\n  return (\r\n    <div>\r\n      <h2>User Dashboard</h2>\r\n      <div><Link to={'/posts'}> Posts </Link></div>\r\n      <div><Link to={'/posts2'}> Posts V2</Link></div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default UserDashboard","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { selectUser } from '../../app/reducers/userSlice'\r\n\r\nexport const ProtectRoute: React.FC<{ path: string, role?: string, exact?: boolean }> = ({ path, role, exact, children }) => {\r\n    const user = useSelector(selectUser)\r\n\r\n    if (role && !user?.roles.find(r => r.name == role)) {\r\n        return (<Redirect to={`/login?path=${path}&role=${role}`} />)\r\n    }\r\n\r\n    if (!user?.token) {\r\n        return (<Redirect to={`/login?path=${path}`} />)\r\n    }\r\n\r\n    return (<Route path={path} exact={exact} children={children} />)\r\n}\r\n\r\nexport default ProtectRoute","import React, {useState, useEffect, useCallback} from 'react'\r\nimport { Col, Form, Alert, Button, InputGroup, DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport './FilterItem.css'\r\n\r\nconst basicOptionsName = {\r\n    contains : 'contains',\r\n    not_contains : 'not contains',\r\n    starts_with : 'starts with',\r\n    not_starts_with : 'not starts with',\r\n    ends_with : 'ends with',\r\n    not_ends_with : 'not ends with',\r\n    isEmpty : 'is empty',\r\n}\r\n\r\ntype basicOptionsNameType = 'contains' | 'not_contains' | 'starts_with' | 'not_starts_with' | 'ends_with' | 'not_ends_with' | 'isEmpty'\r\n\r\n\r\n\r\nexport interface IFilterItemParam {\r\n    fields: any[]\r\n    onChange: (filter: string | null) => void\r\n}\r\n\r\n  \r\n\r\nexport const FilterItem: React.FC<IFilterItemParam> = ({fields, onChange}) => {\r\n    const [fieldSelected, setFieldSelected] = useState(fields[0])\r\n    const [optionSelected, setOptionSelected] = useState('contains')\r\n    const [filterText, setFilterText] = useState('')\r\n    const [filter, setFilter] = useState<string|null>('null')\r\n\r\n    const onFieldChange = (field:any) => {\r\n        console.log('onFieldChange', field)\r\n        setFieldSelected(field)\r\n        processFilter(field, optionSelected, filterText)\r\n    }\r\n\r\n    const onOptionChange = (option:any) => {\r\n        console.log('onOptionChange', option)\r\n        setOptionSelected(option)\r\n        processFilter(fieldSelected, option, filterText)\r\n    }\r\n\r\n    const onFilterChange = (e:any) => {\r\n        const text = e.target.value\r\n        console.log('onFilterChange', e, text)\r\n        setFilterText(text)\r\n        processFilter(fieldSelected, optionSelected, text)\r\n    }\r\n\r\n    const doFilter = useCallback((f: string | null) => {\r\n        if(filter != f){\r\n            console.log('useFilter>>>', f)\r\n            setFilter(f)\r\n            onChange(f)\r\n        }\r\n    }, [filter, onChange, setFilter])\r\n\r\n    const processFilter = useCallback((field, option, text) => {\r\n        if(!text && option != 'isEmpty') {\r\n            doFilter(null)\r\n            return\r\n        }\r\n\r\n        const f = {} as any\r\n        f[`${field}_${option}`] = text\r\n        doFilter(f)\r\n\r\n    }, [doFilter] )\r\n\r\n    const gc = (o:any) => {\r\n        const o2 = o\r\n        return () => {\r\n            onFieldChange(o2)\r\n        }\r\n    }\r\n\r\n    const go = (o:any) => {\r\n        const o2 = o\r\n        return () => {onOptionChange(o2);}\r\n    }\r\n\r\n\r\n    return (\r\n        <InputGroup className=\"mb-3\">\r\n            <DropdownButton\r\n                className=\"field-option\"\r\n                as={InputGroup.Prepend}\r\n                variant=\"success\"\r\n                title={fieldSelected}\r\n                id=\"input-group-dropdown-0\" >\r\n                    {fields.map((o)=> (<Dropdown.Item key={o} onClick={gc(o)}>{o.toString()}</Dropdown.Item>))}\r\n            </DropdownButton>\r\n            <DropdownButton\r\n                className=\"select-option\"\r\n                as={InputGroup.Prepend}\r\n                variant=\"outline-link\"\r\n                title={basicOptionsName[optionSelected as basicOptionsNameType]}\r\n                id=\"input-group-dropdown-1\" >\r\n                    {Object.getOwnPropertyNames(basicOptionsName).map((o)=> (<Dropdown.Item key={o} onClick={go(o)}>{basicOptionsName[o as basicOptionsNameType]}</Dropdown.Item>))}\r\n            </DropdownButton>\r\n            <Form.Control value={filterText} onChange={onFilterChange}/>\r\n        </InputGroup>)\r\n\r\n}\r\n\r\nexport default FilterItem","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from 'react-bootstrap'\r\nimport './Row.css'\r\n\r\n\r\nexport interface IFilteredFieldDesc {\r\n  name: string\r\n  title?: string\r\n  component?: React.FC<any>\r\n}\r\n\r\nexport type IFilteredField = IFilteredFieldDesc | string\r\n\r\nexport interface IListRowParams {\r\n  item: any\r\n  field: IFilteredField\r\n}\r\n\r\nconst getElementFromField = (item: any, field: IFilteredField) => {\r\n  const fieldDesc = field as IFilteredFieldDesc\r\n\r\n  const names = fieldDesc.name ? fieldDesc.name.split('.') : (field as string).split('.')\r\n  const element = item[names[0]]\r\n\r\n  return { element, name: names[0], names }\r\n}\r\n\r\nexport const ListRowItem: React.FC<IListRowParams> = ({ item, field }) => {\r\n  const { element, name, names } = getElementFromField(item, field)\r\n\r\n  if (!element) {\r\n    return (<>ERR NOT EXIST:{name}</>)\r\n  }\r\n\r\n  if ((field as IFilteredFieldDesc).component) {\r\n    const component = (field as IFilteredFieldDesc).component\r\n    return (<>{component && component({ value: element, names, item })}</>)\r\n  }\r\n\r\n  if (element.substr && element.length > 50) {\r\n    return (<>{element.substr(0, 47)}...</>)\r\n  }\r\n\r\n  if (element.push && element.reduce && names.length > 1) {\r\n    return (<>{(element as any[]).reduce((p, e) => p + e[names[1]], '')}</>)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {element}\r\n    </>\r\n  );\r\n};\r\n\r\n","import React, { useCallback, useMemo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'react-bootstrap'\r\nimport './Row.css'\r\nimport { ListRowItem, IFilteredField } from './RowItem'\r\n\r\nexport interface IListRowItem {\r\n  id: string\r\n  name: string\r\n  user: any\r\n}\r\n\r\nexport interface IListRowParams {\r\n  name: string\r\n  item: any\r\n  fields?: IFilteredField[]\r\n  onDelete: (obj: any) => void\r\n  showDelete?: boolean\r\n  onEdit?: (item: any) => void\r\n  getEditLink?: (item: unknown) => string\r\n}\r\n\r\nexport const ListRow: React.FC<IListRowParams> = ({ item, onDelete, name, fields = ['id'], showDelete = false, onEdit, getEditLink }) => {\r\n  const doEdit = useCallback(() => {\r\n    if (onEdit) onEdit(item)\r\n  }, [item, onEdit])\r\n\r\n  const editLink = useMemo(() => {\r\n    if (getEditLink) return getEditLink(item)\r\n    else return `/user/${name.toLowerCase()}/${item.id}`\r\n  }, [name, item, getEditLink])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <tr>\r\n        <td className=\"id\">{onEdit ? <span role={'link'} tabIndex={0} onKeyPress={()=>{}} onClick={doEdit}>{item.id}</span> : <Link to={editLink}>{item.id}</Link>}</td>\r\n        {fields.map(\r\n          (field) =>\r\n            field !== 'id' && (\r\n              <td>\r\n                <ListRowItem item={item} field={field} />\r\n              </td>\r\n            ),\r\n        )}\r\n        {item.user && <td>{item.user.email}</td>}\r\n\r\n        {showDelete && (\r\n          <td className=\"right\">\r\n            <Button\r\n              variant=\"danger\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                onDelete(item)\r\n              }}\r\n            >\r\n              delete\r\n            </Button>\r\n          </td>\r\n        )}\r\n      </tr>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nexport const Loading = ({what = ''}) => {\r\n    return (<div>{`Loading ${what}... `}</div>)\r\n}\r\n\r\nexport default Loading","import React, { useEffect, useState } from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\n\r\nexport interface IDeleteModalParams {\r\n  show?: boolean | string | number\r\n  onHide?: () => void\r\n  onDelete: (\r\n    deleteObjectId: IDeleteModalParams['deleteObjectId'],\r\n    deleteObjectName?: IDeleteModalParams['deleteObjectName'],\r\n  ) => void\r\n  categoryName: string\r\n  deleteObjectId?: string | number\r\n  deleteObjectName?: string\r\n  deleting?: boolean\r\n}\r\n\r\nexport const DeleteModal: React.FC<IDeleteModalParams> = ({\r\n  show = false,\r\n  onHide,\r\n  onDelete,\r\n  categoryName,\r\n  deleteObjectId,\r\n  deleteObjectName,\r\n  deleting,\r\n}) => {\r\n  const [showMe, setShowMe] = useState(show)\r\n  const [lastShow, setLastShow] = useState(show)\r\n  const onDeleteAction = () => {\r\n    if (!deleting) {\r\n      onDelete(deleteObjectId, deleteObjectName)\r\n    }\r\n  }\r\n\r\n  const onHideAction = () => {\r\n    if (onHide) {\r\n      onHide()\r\n    } else {\r\n      setShowMe(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (show !== lastShow) {\r\n      setShowMe(!!show)\r\n      setLastShow(show)\r\n    }\r\n  }, [lastShow, show, deleteObjectId])\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={showMe} onHide={onHideAction}>\r\n        <Modal.Header closeButton>\r\n          <div>\r\n            <Modal.Title>\r\n              Delete {'>>'} {deleteObjectId} {'<<'}\r\n            </Modal.Title>\r\n          </div>\r\n        </Modal.Header>\r\n\r\n        {deleteObjectId && (\r\n          <Modal.Body>\r\n            {!deleting ? (\r\n              <p>\r\n                Are you sure, you want remove {categoryName} item with\r\n                {deleteObjectName ? `name ${deleteObjectName} and ` : ''} id{' '}\r\n                <i>'{deleteObjectId}'</i>\r\n              </p>\r\n            ) : (\r\n              <p>\r\n                Removing {categoryName} item with{' '}\r\n                {deleteObjectName ? `name ${deleteObjectName} and ` : ''}\r\n                {deleteObjectId} ...\r\n              </p>\r\n            )}\r\n          </Modal.Body>\r\n        )}\r\n\r\n        <Modal.Footer>\r\n          <Button disabled={deleting} variant=\"danger\" type=\"submit\" onClick={onDeleteAction}>\r\n            Delete\r\n          </Button>\r\n          <Button disabled={deleting} variant=\"primary\" onClick={onHideAction}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteModal\r\n","import React from \"react\";\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nexport const Unauthorized = ({where = ''}) => {\r\n    return (<Alert variant={'danger'}>{`Unauthorized ${where} access`}</Alert>)\r\n}\r\n\r\nexport default Unauthorized","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Table as BTable, Button } from 'react-bootstrap'\r\n\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { IListRowParams, ListRow } from './Row'\r\nimport Loading from '../Loading/Loading'\r\nimport DeleteModal from '../DeleteModal/DeleteModal'\r\nimport Unauthorized from '../Unauthorized/Unauthorized'\r\nimport { DocumentNode } from 'graphql'\r\nimport { IFilteredField } from './RowItem'\r\n\r\nexport interface IFilterWithParams {\r\n  filter?: string\r\n  params?: string\r\n}\r\n\r\nexport interface ITableQueries {\r\n  ADMIN_LIST_QUERY: DocumentNode\r\n  USER_LIST_QUERY: DocumentNode\r\n  DELETE_MUTATION: DocumentNode\r\n}\r\n\r\nexport interface ITableList {\r\n  userId?: string\r\n  adminMode?: boolean\r\n  filter: any\r\n  queries: ITableQueries\r\n  fields?: IFilteredField[]\r\n  name: string\r\n  onEdit: IListRowParams['onEdit']\r\n  getEditLink?: IListRowParams['getEditLink']\r\n}\r\n\r\nexport const Table: React.FC<ITableList> = ({\r\n  filter,\r\n  name,\r\n  adminMode = false,\r\n  queries,\r\n  fields,\r\n  onEdit,\r\n  getEditLink,\r\n}) => {\r\n  const [unauthorized, setUnauthorized] = useState(false)\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false)\r\n  const [deleteObject, setDeleteObject] = useState(null)\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false)\r\n  const [deletingOnDeleteDialog, setDeletingOnDeleteDialog] = useState(false)\r\n\r\n  const [loading, setLoading] = useState(true)\r\n  const [data, setData] = useState<any>([])\r\n  const [error, setError] = useState<any>()\r\n\r\n  const { refetch: userRefetch, loading: userLoading } = useQuery(\r\n    adminMode ? queries.ADMIN_LIST_QUERY : queries.USER_LIST_QUERY,\r\n    {\r\n      onError: (e) => {\r\n        console.log('onError >>> ', e.message)\r\n        if (e.message == 'GraphQL error: Unauhorized') {\r\n          setUnauthorized(true)\r\n        } else {\r\n          setError(e)\r\n        }\r\n      },\r\n      onCompleted: (d) => {\r\n        console.log('user: onCompleted', d)\r\n        setLoading(false)\r\n\r\n        const dataFields = Object.getOwnPropertyNames(d)\r\n        if (dataFields.length > 0 && d[dataFields[0]].length > 0) {\r\n          setData(d[dataFields[0]])\r\n        } else {\r\n          setData([])\r\n        }\r\n      },\r\n      variables: { filter },\r\n    },\r\n  )\r\n\r\n  const [deleteProjectMutation, { loading: deleteLoading, error: deleteError }] = useMutation(\r\n    queries.DELETE_MUTATION,\r\n    {\r\n      errorPolicy: 'none',\r\n      onCompleted: (data: any) => {\r\n        console.log('DELETE', data.deleteProject)\r\n        onHideDidaloDelete()\r\n        userRefetch()\r\n      },\r\n      onError: (e) => {\r\n        console.log('onError >>> ', e.message)\r\n        if (e.message == 'GraphQL error: Unauhorized') {\r\n          setUnauthorized(true)\r\n        }\r\n      },\r\n    },\r\n  )\r\n\r\n  const onHideDidaloDelete = () => {\r\n    setShowDeleteDialog(false)\r\n    setDeleteObject(null)\r\n  }\r\n\r\n  const onDelete = (obj: any) => {\r\n    setDeletingOnDeleteDialog(false)\r\n    setShowDeleteDialog(true)\r\n    setDeleteObject(obj)\r\n  }\r\n\r\n  const doDelete = (deleteObject: any) => {\r\n    setDeletingOnDeleteDialog(true)\r\n    deleteProjectMutation({\r\n      variables: {\r\n        id: deleteObject.id,\r\n      },\r\n    })\r\n  }\r\n\r\n  if (unauthorized) {\r\n    return <Unauthorized where={'projects'} />\r\n  }\r\n  if (userLoading) return <Loading what={'projects'} />\r\n\r\n  return (\r\n    <div>\r\n      {error && <div>{`Error! ${error.message}`}</div>}\r\n\r\n      <BTable responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            {fields?.map((f) => f !== 'id' && <th>{(f as any).name ? (f as any).name : f}</th>)}\r\n            {adminMode && <th>User</th>}\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.length &&\r\n            data.map((projectItem: any) => (\r\n              <ListRow\r\n                name={name}\r\n                item={projectItem}\r\n                onDelete={onDelete}\r\n                fields={fields}\r\n                showDelete={adminMode}\r\n                onEdit={onEdit}\r\n                getEditLink={getEditLink}\r\n              />\r\n            ))}\r\n        </tbody>\r\n      </BTable>\r\n\r\n      <DeleteModal\r\n        show={showDeleteDialog}\r\n        onHide={onHideDidaloDelete}\r\n        onDelete={doDelete}\r\n        categoryName={'project'}\r\n        deleteObjectId={(deleteObject as any)?.id}\r\n        deleteObjectName={(deleteObject as any)?.name}\r\n        deleting={deletingOnDeleteDialog}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Table\r\n","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport FilterItem from './FilterItem'\r\nimport { Navbar, Button } from 'react-bootstrap'\r\nimport './FilteredList.css'\r\nimport { IFilteredField } from './RowItem'\r\nimport Table, { ITableList, ITableQueries } from './Table'\r\n\r\nexport interface IProjectFilterList {\r\n  name: string\r\n  userId?: string\r\n  adminMode?: boolean\r\n  queries: ITableQueries\r\n  fields: IFilteredField[]\r\n  filter?: any\r\n  onCreate?: () => void\r\n  onEdit?: ITableList['onEdit']\r\n  getEditLink?: ITableList['getEditLink']\r\n}\r\n\r\nconst createFilter = () => {\r\n  const obj: any = []\r\n  obj.name = 'AND'\r\n  return { AND: obj }\r\n}\r\n\r\nconst addAnd = (node: any, filter: any) => {\r\n  let obj: any = filter\r\n\r\n  if (node.name != 'AND') {\r\n    obj = [obj]\r\n    obj.name = 'AND'\r\n  }\r\n\r\n  node.push(obj)\r\n}\r\n\r\nconst filterDestructNode = (node: any) => {\r\n  let filter = ''\r\n\r\n  for (const n of node) {\r\n    if (n.name && n.length > 0) {\r\n      filter += `,${filterDestructNode(n)}`\r\n    } else {\r\n      filter += `,{${n.filter}}`\r\n    }\r\n  }\r\n\r\n  return `{${node.name}:[${filter.substr(1)}]}`\r\n}\r\n\r\nconst filterDestruct = (filter: any) => {\r\n  const fo = {\r\n    filter: '',\r\n    params: '',\r\n  }\r\n\r\n  fo.filter = filter.AND.length > 0 ? `(filter: ${filterDestructNode(filter.AND)})` : ''\r\n  fo.params = fo.params.length > 2 ? `(${fo.params.substr(1)})` : ''\r\n\r\n  return fo\r\n}\r\n\r\nexport const FilteredList: React.FC<IProjectFilterList> = ({ name, userId, adminMode = false, queries, fields, filter: staticFilter, onCreate, onEdit, getEditLink }) => {\r\n  const [filter, setFilter] = useState(adminMode ? createFilter() : null)\r\n  const history = useHistory()\r\n\r\n  // console.log(filter, listFilter)\r\n  const createDefaultFilter = (userId?: string) => {\r\n    const defaultFilter = createFilter()\r\n\r\n    if (userId) {\r\n      addAnd(defaultFilter.AND, { user_every: { id: userId } })\r\n    }\r\n\r\n    if (staticFilter) {\r\n      addAnd(defaultFilter.AND, staticFilter)\r\n    }\r\n\r\n    return defaultFilter\r\n  }\r\n\r\n  const processFilter = (filter: any) => {\r\n    const filterDestructed = filterDestruct(filter)\r\n\r\n    console.log('processFilter', { filter, filterDestructed })\r\n\r\n    setFilter(filter)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const defaultFilter = createDefaultFilter(userId)\r\n    processFilter(defaultFilter)\r\n  }, [userId])\r\n\r\n  const onFilterChange = useCallback(\r\n    (f: string | null) => {\r\n      const defaultFilter = createDefaultFilter(userId)\r\n\r\n      if (f) {\r\n        addAnd(defaultFilter.AND, f)\r\n      }\r\n\r\n      processFilter(defaultFilter)\r\n    },\r\n    [userId],\r\n  )\r\n\r\n  const onCreateNew = () => {\r\n    if (onCreate) onCreate()\r\n    else history.push('/user/' + name.toLowerCase() + '/create')\r\n  }\r\n\r\n  // if is not adminMode,\r\n  // the useEffect will update filter with user after render\r\n  // but in render is already called the query\r\n  // but the query will call without properly setuped filter and return unauthorized\r\n  if (!adminMode && !filter) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"base-filtered-list\">\r\n      <section>\r\n        <h1>{name}</h1>\r\n        <div className=\"row-head\">\r\n          <FilterItem fields={fields} onChange={onFilterChange} />\r\n          <div></div>\r\n        </div>\r\n        <div className=\"row-table\">\r\n          <Table name={name} filter={filter} queries={queries} adminMode={adminMode} fields={fields} onEdit={onEdit} getEditLink={getEditLink} />\r\n          <Button onClick={onCreateNew}>Create New</Button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilteredList\r\n","import { useMutation, useQuery } from '@apollo/client'\r\nimport React, { useCallback, useState } from 'react'\r\nimport Loading from '../Loading/Loading'\r\nimport Unauthorized from '../Unauthorized/Unauthorized'\r\n\r\nexport const getDataFromRaw = (rawData: any) => {\r\n  const rawName = Object.keys(rawData)[0]\r\n  return rawData[rawName]\r\n}\r\n\r\nexport const Editor = ({ name, form, id, renameError, onUpdated, updateCache, query, children }: any) => {\r\n  const [localId, setLocalId] = useState(id !== 'create' ? id : undefined)\r\n  const [unauthorized, setUnauthorized] = useState(false)\r\n  const [errors, setErrors] = useState<string[] | null>([])\r\n\r\n  const [storedData, setStoredData] = useState({})\r\n\r\n  const handleError = (incommingError: { message: string }) => {\r\n    let incomingErrors = incommingError.message.split('\\n')\r\n    if (renameError) {\r\n      incomingErrors = incomingErrors.map((error) => renameError(error))\r\n    }\r\n    setErrors(incomingErrors)\r\n  }\r\n\r\n  const updateDataFromLoaded = (loadedDataRaw: any) => {\r\n    if (!loadedDataRaw) {\r\n      return\r\n    }\r\n\r\n    const loadedData = getDataFromRaw(loadedDataRaw)\r\n\r\n    if (loadedData) {\r\n      setStoredData({ ...loadedData })\r\n    } else {\r\n      setUnauthorized(true)\r\n    }\r\n  }\r\n\r\n  const onCompleted = (raw: any) => {\r\n    const data = getDataFromRaw(raw)\r\n    setLocalId(data.id)\r\n    setErrors(null)\r\n    if (onUpdated) onUpdated(raw)\r\n  }\r\n\r\n  const skipLoading = !localId\r\n  const { loading, error } = useQuery(query.QUERY, {\r\n    variables: { id: localId },\r\n    skip: skipLoading,\r\n    onCompleted: (loadedDataRaw: any) => {\r\n      updateDataFromLoaded(loadedDataRaw)\r\n    },\r\n    onError: (e) => {\r\n      if (e.message == 'GraphQL error: Unauhorized') {\r\n        setUnauthorized(true)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [createProjectMutation] = useMutation(query.CREATE_MUTATION, {\r\n    errorPolicy: 'none',\r\n    onCompleted: onCompleted,\r\n    update: updateCache,\r\n    onError: handleError,\r\n  })\r\n\r\n  const [updateProjectMutation] = useMutation(query.UPDATE_MUTATION, {\r\n    errorPolicy: 'none',\r\n    onCompleted: onCompleted,\r\n    update: updateCache,\r\n    onError: handleError,\r\n  })\r\n\r\n  // const onSubmit = (data:any) => {\r\n  //   console.log(data)\r\n  // }\r\n\r\n  const onSubmit = useCallback(\r\n    (data) => {\r\n      if (localId) {\r\n        setErrors(null)\r\n        updateProjectMutation({\r\n          variables: {\r\n            id: localId,\r\n            ...data,\r\n          },\r\n        })\r\n      } else {\r\n        createProjectMutation({\r\n          variables: {\r\n            userId: localStorage.getItem('user.id'),\r\n            ...data,\r\n          },\r\n        })\r\n      }\r\n    },\r\n    [localId, storedData],\r\n  )\r\n\r\n  if (unauthorized) {\r\n    return <Unauthorized where={`${name} edit`} />\r\n  }\r\n\r\n  if (loading) {\r\n    return <Loading what={name} />\r\n  }\r\n\r\n  return <div>{children(storedData, onSubmit, errors)}</div>\r\n}\r\n\r\nexport default Editor\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { DropdownButton, Dropdown, Form } from \"react-bootstrap\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { getDataFromRaw } from \"../Editor/Editor\";\r\n\r\nexport const ConnectBase: React.FC<{value:any, names?:any, gql: any, item: any}> = ({value, names, gql, item}) => {\r\n    const element = value\r\n    const name = names.length>1 && names[1]\r\n    const elementTitle = element.push && element.reduce && names.length > 1 ? (element as any[]).reduce((p, e)=>p + `, ${e[name]}`, '').substr(2) : element\r\n  \r\n    const [title, setTitle] = useState(elementTitle)\r\n    const [data, setData] = useState<any[]>([])\r\n  \r\n    const { refetch: userRefetch, loading: userLoading } = useQuery(gql.QUERY, {\r\n      onError: (e) => {\r\n        console.log('ConnectBase:onError >>> ', e.message)\r\n        if(e.message == 'GraphQL error: Unauhorized'){\r\n          // setUnauthorized(true)\r\n        } else {\r\n          // setError(e)\r\n        }\r\n      }, onCompleted: (iraw) => {\r\n        console.log('user: onCompleted', iraw)\r\n        // setLoading(false)\r\n\r\n        const dataFields = Object.getOwnPropertyNames(iraw)\r\n        if(dataFields.length > 0 && iraw[dataFields[0]].length > 0){\r\n          const raw = iraw[dataFields[0]]\r\n  \r\n          const final = raw.map((r:any)=>{\r\n            return {\r\n              id: r.id,\r\n              checked: title.indexOf(r[name]) !== -1,\r\n              label: r[name]\r\n            }\r\n          })\r\n  \r\n          setData(final)\r\n        } else {\r\n          setData([])\r\n        }\r\n        \r\n      },\r\n    });\r\n  \r\n    const [\r\n      addMutation,\r\n      { loading: addMutaionLoading, data: addMutationData, error: addMutationError }\r\n    ] = useMutation(gql.ADD, {\r\n      errorPolicy: \"none\",\r\n      onCompleted: (raw: any) => {\r\n        const data = getDataFromRaw(raw)\r\n        console.log(\"ADDED\", raw, data.id);\r\n      },\r\n      onError: () => {}\r\n    });\r\n  \r\n    const [\r\n      removeMutation,\r\n      { loading: removeMutaionLoading, data: removeMutationData, error: removeMutationError }\r\n    ] = useMutation(gql.REMOVE, {\r\n      errorPolicy: \"none\",\r\n      onCompleted: (raw: any) => {\r\n        const data = getDataFromRaw(raw)\r\n        console.log(\"REMOVE\", raw, data.id);\r\n      },\r\n      onError: () => {}\r\n    });\r\n  \r\n    const onChecked = (value:any) => {\r\n      const updated = data.map((d:any)=>{\r\n        if(d.label === value.label) {\r\n          d.checked = !d.checked\r\n        }\r\n        return {...d}\r\n      })\r\n  \r\n      const updateTitle = (updated as any[]).reduce((p, e) => {\r\n        if(e.checked) return `${p}, ${e.label}`\r\n        else return p\r\n      }, '').substr(1)\r\n  \r\n      console.log('onChecked:', {updated, value, updateTitle})\r\n  \r\n      if(value.checked){\r\n        addMutation({\r\n          variables: {\r\n            id1: value.id,\r\n            id2: item.id\r\n          }\r\n        });\r\n      } else {\r\n        removeMutation({\r\n          variables: {\r\n            id1: value.id,\r\n            id2: item.id\r\n          }\r\n        });\r\n      }\r\n      \r\n  \r\n      setData(updated)\r\n      setTitle(updateTitle)\r\n    }\r\n    \r\n    // if(element.push && element.reduce && names.length > 1) {\r\n    //   return (<>ahoj: {(element as any[]).reduce((p, e)=>p + e[names[1]], '')}</>)\r\n    // }\r\n  \r\n    return (<DropdownButton id=\"dropdown-basic-button\" title={title}>\r\n        {data && data.map((d:any)=>(\r\n        <Dropdown.Item  onClick={(e:any) => onChecked(d)} >\r\n          <Form.Check \r\n              type=\"checkbox\" \r\n              label={d.label} \r\n              checked={d.checked} />\r\n        </Dropdown.Item>))\r\n        }\r\n      </DropdownButton>)\r\n  }\r\n\r\n  export default ConnectBase","import React from \"react\";\r\nimport gql from 'graphql-tag';\r\nimport FilteredList from \"../../../components/List/FilteredList\";\r\nimport ConnectBase from \"../../../components/List/ConnectBase\";\r\nimport { loader } from \"graphql.macro\";\r\n\r\nconst QUERY_ALL_USERS_ADMIN = loader('./graphql/query-all-user-admin.gql')\r\nconst USER_ROLE_QUERY = loader('./graphql/query-all-user-role.gql')\r\nconst MUTATION_ADD_USER_ROLE_TO_USER = loader('./graphql/mutation-add-user-role-to-user.gql')\r\nconst MUTATION_REMOVE_USER_ROLE_FROM_USER = loader('./graphql/mutation-remove-user-role-from-user.gql')\r\nconst MUTATION_REMOVE_USER = loader('./graphql/mutation-remove-user.gql')\r\nconst USER_LIST_QUERY = gql`\r\n{allUser{id}}`;\r\n\r\nconst ConnectRole: React.FC<{ value: any, names?: any, item: any }> = ({ value, names, item }) => {\r\n\r\n  const gql = {\r\n    QUERY: USER_ROLE_QUERY,\r\n    ADD: MUTATION_ADD_USER_ROLE_TO_USER,\r\n    REMOVE: MUTATION_REMOVE_USER_ROLE_FROM_USER\r\n  }\r\n\r\n  return <ConnectBase value={value} names={names} gql={gql} item={item} />\r\n}\r\n\r\nexport const UsersList: React.FC<{ userId?: string, adminMode?: boolean }> = ({ userId, adminMode = false }) => {\r\n  return (\r\n    <div>\r\n      <FilteredList\r\n        name={'Users'}\r\n        fields={['email', 'password', { name: 'roles.name', component: ConnectRole }, 'roles.id']}\r\n        userId={userId}\r\n        adminMode={adminMode}\r\n        queries={{ USER_LIST_QUERY, ADMIN_LIST_QUERY: QUERY_ALL_USERS_ADMIN, DELETE_MUTATION: MUTATION_REMOVE_USER }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList","import React, { useState, useEffect } from \"react\";\r\nimport FilteredList from \"../../../components/List/FilteredList\";\r\nimport gql from 'graphql-tag';\r\nimport { loader } from \"graphql.macro\";\r\n\r\nconst USER_LIST_QUERY = loader('./graphql/query-all-user-role-admin.gql')\r\nconst ADMIN_LIST_QUERY = loader('./graphql/query-all-user-role-admin.gql')\r\nconst DELETE_MUTATION = loader('./graphql/mutation-remove-user-role.gql')\r\n\r\nexport const UserRoleList: React.FC<{ userId?: string, adminMode?: boolean }> = ({ userId, adminMode = false }) => {\r\n  return (\r\n    <div>\r\n      <FilteredList\r\n        name={'Roles'}\r\n        fields={['name']}\r\n        userId={userId}\r\n        adminMode={adminMode}\r\n        queries={{ USER_LIST_QUERY, ADMIN_LIST_QUERY, DELETE_MUTATION }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserRoleList","import React, { useEffect } from 'react'\r\nimport { Form, FormControl } from 'react-bootstrap'\r\n\r\nexport const Control = ({name, storedData, label, required, register, placeholder, formState, setValue}:any) => {\r\n    const {errors, touchedFields, dirtyFields} = formState\r\n    const error = (errors && errors[name])\r\n    const touched = touchedFields && touchedFields[name]\r\n    const dirty = dirtyFields && dirtyFields[name]\r\n    \r\n    useEffect(()=>{\r\n      if(storedData && storedData[name]) setValue(name, storedData[name])\r\n    },[storedData])\r\n  \r\n    return (\r\n      <React.Fragment >\r\n        <Form.Group controlId={`form-${name}`}>\r\n            <Form.Label>{label} {required && '*'}</Form.Label>\r\n            <Form.Control\r\n                type=\"text\"\r\n                placeholder={placeholder}\r\n                {...register(name as any, {required})}\r\n                \r\n                isInvalid={error}\r\n                /* isValid={dirty && !error} */\r\n              />\r\n            \r\n            <FormControl.Feedback type=\"valid\">\r\n              Perfect!\r\n            </FormControl.Feedback>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid {label}.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n\r\n  export default Control","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport * as _ from 'lodash'\r\nimport gql from \"graphql-tag\";\r\n\r\nimport Editor from \"../../../components/Editor/Editor\"\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { useForm } from 'react-hook-form'\r\nimport Control from \"../../../components/Editor/Control\";\r\nimport { loader } from \"graphql.macro\";\r\n\r\nconst CREATE_MUTATION = loader('./graphql/mutation-create-user-role.gql')\r\nconst UPDATE_MUTATION = loader('./graphql//mutation-update-user-role.gql')\r\nconst QUERY = loader('./graphql/query-user-role.gql')\r\n\r\nconst UserRoleForm = ({ storedData, onSubmit, userRoleId, graphQlError }: any) => {\r\n  const reactForm = useForm()\r\n  const { register, handleSubmit, formState, setValue, getValues, watch } = reactForm\r\n  return (<Form onSubmit={handleSubmit(onSubmit)}>\r\n    <Control name={'name'} label={'Role name'} required={true} storedData={storedData} {...reactForm} />\r\n    <Button type=\"submit\">Save</Button>\r\n  </Form>)\r\n}\r\n\r\nexport const UserRoleEdit = (data: any) => {\r\n  const { id } = useParams() as { id: string }\r\n\r\n  return (\r\n    <>\r\n      <Editor\r\n        id={id}\r\n        name={'UserRole'}\r\n        fields={['role']}\r\n        query={{\r\n          CREATE_MUTATION,\r\n          UPDATE_MUTATION,\r\n          QUERY\r\n        }}\r\n      >\r\n        {(storedData: any, onSubmit: any, errors: any) => <UserRoleForm storedData={storedData} onSubmit={onSubmit} graphQlError={errors} userRoleId={id} />}\r\n      </Editor>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRoleEdit","import React from 'react'\r\nimport { getGraphqlMonsterClientAppRoot } from \"../../app/utils\"\r\n\r\nexport const Image = ({ publicKey, width, height }: { publicKey: string, width?: string | number, height?: string | number }) => {\r\n    const _width = width || '100px'\r\n    const _height = height || '100px'\r\n\r\n    return (\r\n        <div style={{\r\n            overflow: 'hidden',\r\n            width: _width,\r\n            height: _height\r\n        }}>\r\n            <img\r\n                alt=''\r\n                style={{\r\n                    objectFit: 'cover',\r\n                    width: '100%',\r\n                    minHeight: '100%'\r\n                }}\r\n                src={`${getGraphqlMonsterClientAppRoot()}/download/${publicKey}`} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image","import { useMutation, useQuery } from '@apollo/client'\r\nimport { loader } from 'graphql.macro'\r\nimport React, { useState } from 'react'\r\nimport { Alert, Button } from 'react-bootstrap'\r\n\r\nimport { uploadFile } from '../../../app/utils'\r\nimport DeleteModal, { IDeleteModalParams } from '../../../components/DeleteModal/DeleteModal'\r\nimport Loading from '../../../components/Loading/Loading'\r\nimport Image from '../../../components/Image/Image'\r\n// import { Counter } from './features/counter/Counter';\r\nimport './Home.css'\r\nimport { Post, TPostModel } from './Post'\r\n\r\nconst CREATE_MUTATION = loader('./graphql/create.gql')\r\nconst ALL_QUERY = loader('./graphql/all.gql')\r\nconst REMOVE_MUTATION = loader('./graphql/remove.gql')\r\n\r\nconst handeUpload = uploadFile('files')\r\n\r\nconst Posts = () => {\r\n\r\n  const [text, setText] = useState<string>('')\r\n  const [postForRemoveId, setPostForRemoveId] = useState<TPostModel['id']>()\r\n\r\n  const [createPost, { error: createError }] = useMutation(CREATE_MUTATION)\r\n  const { data, loading, error: loadingError, refetch } = useQuery(ALL_QUERY)\r\n  const [removePost, { error: removeError }] = useMutation(REMOVE_MUTATION)\r\n\r\n  const [uploadError, setUploadError] = useState<any>()\r\n  const [lastUploadedImage, setLastUploadedImage] = useState<any>()\r\n\r\n  const addPost = async () => {\r\n    setText('')\r\n\r\n    const sendingData = { variables: { text } } as any\r\n    if (lastUploadedImage) {\r\n      sendingData.variables.image = lastUploadedImage.publicKey\r\n    }\r\n\r\n    await createPost(sendingData)\r\n    setLastUploadedImage(undefined)\r\n    refetch()\r\n  }\r\n\r\n  const onTextChange = (event: any) => {\r\n    setText(event.target.value)\r\n    //text = event.target.value;\r\n  }\r\n\r\n  const showDeleteModal = (id: TPostModel['id']) => {\r\n    setPostForRemoveId(id)\r\n  }\r\n\r\n  const onDelete: IDeleteModalParams['onDelete'] = async (id) => {\r\n    await removePost({ variables: { id } })\r\n    setPostForRemoveId(undefined)\r\n    refetch()\r\n  }\r\n\r\n  const onDeleteModalHide = () => {\r\n    setPostForRemoveId(undefined)\r\n  }\r\n\r\n  const onFileChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    setUploadError(undefined)\r\n    handeUpload(event, (err, uploadedImage) => {\r\n      if (err) {\r\n        return setUploadError(err)\r\n      }\r\n\r\n      setLastUploadedImage(uploadedImage)\r\n    })\r\n  }\r\n\r\n  if (loading) {\r\n    return <Loading />\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h4>Add Post</h4>\r\n      {createError && <Alert variant={'danger'}>Add post: {createError.message}</Alert>}\r\n      {removeError && <Alert variant={'danger'}>Remove post: {removeError.message}</Alert>}\r\n      {loadingError && <Alert variant={'danger'}>Loading: {loadingError.message}</Alert>}\r\n      {uploadError && <Alert variant={'danger'}>Upload: {uploadError.message}</Alert>}\r\n      <input type=\"text\" value={text} onChange={onTextChange} />\r\n      <div>\r\n        <input type=\"file\" id=\"customFile\" onChange={onFileChange} />\r\n      </div>\r\n      {lastUploadedImage && <div style={{ width: '320px', margin: '0px auto' }}>\r\n        <Image publicKey={lastUploadedImage.publicKey} width={'320px'} height={'280px'} />\r\n      </div>}\r\n\r\n      <Button onClick={addPost}>Add Post</Button>\r\n\r\n      <h4>Posts</h4>\r\n\r\n\r\n\r\n      {data?.allPost?.map((post: any, idx: number) => (\r\n        <div key={idx}>\r\n          {post.text}{' '}\r\n          {post.image && <div style={{ width: '320px', margin: '0px auto' }}>\r\n            <Image publicKey={post.image} width={'320px'} height={'280px'} />\r\n          </div>}\r\n          <Button\r\n            size={'sm'}\r\n            variant={'danger'}\r\n            onClick={() => {\r\n              showDeleteModal(post.id)\r\n            }}\r\n          >\r\n            Remove\r\n          </Button>\r\n        </div>\r\n      ))}\r\n\r\n      <a href={'https://github.com/miuan/fawesome/blob/37f894d8c62874f1c436e676f87d96e49b57d4e9/src/pages/user/Posts/Posts.tsx'} target={'_blank'}>Source code</a>\r\n\r\n      <DeleteModal\r\n        show={!!postForRemoveId}\r\n        categoryName={'Posts'}\r\n        onDelete={onDelete}\r\n        onHide={onDeleteModalHide}\r\n        deleteObjectId={postForRemoveId}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n","import { useMutation, useQuery } from '@apollo/client'\r\nimport { loader } from 'graphql.macro'\r\nimport React, { useState } from 'react'\r\nimport { Alert, Button, Carousel, Form } from 'react-bootstrap'\r\n\r\nimport { uploadFile } from '../../../app/utils'\r\nimport DeleteModal, { IDeleteModalParams } from '../../../components/DeleteModal/DeleteModal'\r\nimport Loading from '../../../components/Loading/Loading'\r\nimport Image from '../../../components/Image/Image'\r\n\r\n// import { Counter } from './features/counter/Counter';\r\nimport './Posts.css'\r\nimport { Post, TPostModel } from './Post'\r\n\r\nconst CREATE_MUTATION = loader('./graphql/create.gql')\r\nconst ALL_QUERY = loader('./graphql/all.gql')\r\nconst REMOVE_MUTATION = loader('./graphql/remove.gql')\r\nconst REMOVE_IMAGE_MUTATION = loader('./graphql/remove-image.gql')\r\n\r\nconst handeUpload = uploadFile('files')\r\n\r\nconst Posts = () => {\r\n\r\n  const [text, setText] = useState<string>('')\r\n  const [color, setColor] = useState<string>('#28a745')\r\n  const [postForRemoveId, setPostForRemoveId] = useState<TPostModel['id']>()\r\n\r\n  const [createPost, { error: createError }] = useMutation(CREATE_MUTATION)\r\n  const { data, loading, error: loadingError, refetch } = useQuery(ALL_QUERY)\r\n  const [removePost, { error: removeError }] = useMutation(REMOVE_MUTATION)\r\n  const [removeImage, { error: removeImageError }] = useMutation(REMOVE_IMAGE_MUTATION)\r\n\r\n  const [uploadError, setUploadError] = useState<any>()\r\n  const [images, setImages] = useState<any>([])\r\n\r\n  const addPost = async () => {\r\n    setText('')\r\n\r\n\r\n    const variables = { text, color } as any\r\n    if (images && images.length > 0) {\r\n      const uploadedImages = await Promise.all(images.map((image: any) => handeUpload(image.file)))\r\n      variables.imagesIds = uploadedImages.map((ui: any) => ui.id)\r\n    }\r\n\r\n    await createPost({ variables })\r\n    setImages([])\r\n    refetch()\r\n  }\r\n\r\n  const onTextChange = (event: any) => {\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const onColorChange = (event: any) => {\r\n    setColor(event.target.value)\r\n  }\r\n\r\n  const showDeleteModal = (id: TPostModel['id']) => {\r\n    setPostForRemoveId(id)\r\n  }\r\n\r\n  const onDelete: IDeleteModalParams['onDelete'] = async (id) => {\r\n    const postForRemove = data?.allPost_v2.find((p: any) => p.id === id)\r\n    await removePost({ variables: { id } })\r\n\r\n    if (postForRemove?.images?.length > 0) {\r\n      const removeAllImages = postForRemove?.images.map((image: any) => removeImage({ variables: { id: image.id } }))\r\n      await Promise.all(removeAllImages)\r\n    }\r\n    setPostForRemoveId(undefined)\r\n    refetch()\r\n  }\r\n\r\n  const onDeleteModalHide = () => {\r\n    setPostForRemoveId(undefined)\r\n  }\r\n\r\n  const onFileChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    const target = event.target as any\r\n    if (target?.files?.length > 0) {\r\n      const added = Array.from(target?.files).map((file: any) => ({\r\n        preview: URL.createObjectURL(file),\r\n        file\r\n      }))\r\n\r\n      setImages([...images, ...added])\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const onImageRemove = (image: any) => {\r\n    console.log(image)\r\n    setImages(images.filter((i: any) => i.preview !== image.preview))\r\n  }\r\n\r\n  if (loading) {\r\n    return <Loading />\r\n  }\r\n\r\n  return (\r\n    <div className=\"postsPage\">\r\n      V2\r\n      {createError && <Alert variant={'danger'}>Add post: {createError.message}</Alert>}\r\n      {removeError && <Alert variant={'danger'}>Remove post: {removeError.message}</Alert>}\r\n      {loadingError && <Alert variant={'danger'}>Loading: {loadingError.message}</Alert>}\r\n      {uploadError && <Alert variant={'danger'}>Upload: {uploadError.message}</Alert>}\r\n      <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n        <Form.Label>\r\n          <table>\r\n            <tr>\r\n              <td>\r\n\r\n              </td>\r\n              <td>\r\n                <div className=\"colorPicker\">\r\n                  <Form.Control\r\n                    type=\"color\"\r\n                    id=\"exampleColorInput\"\r\n                    defaultValue={color}\r\n                    title=\"Choose your color\"\r\n                    onChange={onColorChange}\r\n                  />\r\n                </div>\r\n\r\n              </td>\r\n              <td>\r\n                <label className=\"photoButton\" htmlFor=\"uploadImage\">\r\n                  <div >Add photo</div>\r\n                </label>\r\n                <input type=\"file\" id=\"uploadImage\" onChange={onFileChange} style={{ display: 'none' }} multiple={true} />\r\n              </td>\r\n\r\n            </tr>\r\n          </table>\r\n        </Form.Label>\r\n        <Form.Control as=\"textarea\" rows={5} value={text} onChange={onTextChange} />\r\n        {images && images.length > 0 && <div className=\"imagePreviews\">\r\n          <table >\r\n            <tr>\r\n              {images && images.map((image: any) => (<td>\r\n                <div className=\"removePreview\">\r\n                  <PreviewImage src={image.preview} />\r\n                  <span onClick={() => {\r\n                    onImageRemove(image)\r\n                  }} aria-hidden=\"true\">x</span>\r\n                </div>\r\n\r\n              </td>))}\r\n            </tr>\r\n          </table>\r\n        </div>}\r\n\r\n      </Form.Group>\r\n\r\n      <Button onClick={addPost} variant={'success'}>Post Now</Button>\r\n      <div>\r\n\r\n\r\n      </div>\r\n\r\n\r\n\r\n      <hr />\r\n      <h4>Posts</h4>\r\n      {\r\n        data?.allPost_v2?.map((post: any, idx: number) => (\r\n          <div className=\"post\" key={idx} >\r\n            <h5>{post.user?.email}</h5>\r\n\r\n            <Text text={post.text} color={post.color} hasImages={!!post.images?.length} />\r\n            <CarouselImages images={post.images} />\r\n            <div\r\n              // size={'sm'}\r\n              // variant={'danger'}\r\n              onClick={() => {\r\n                showDeleteModal(post.id)\r\n              }}\r\n              aria-hidden=\"true\"\r\n            >\r\n              Remove\r\n            </div>\r\n          </div>\r\n        ))\r\n      }\r\n\r\n      <a href={'https://github.com/miuan/fawesome/blob/37f894d8c62874f1c436e676f87d96e49b57d4e9/src/pages/user/Posts/Posts.tsx'} target={'_blank'}>Source code</a>\r\n\r\n      <DeleteModal\r\n        show={!!postForRemoveId}\r\n        categoryName={'Posts'}\r\n        onDelete={onDelete}\r\n        onHide={onDeleteModalHide}\r\n        deleteObjectId={postForRemoveId}\r\n      />\r\n    </div >\r\n  )\r\n}\r\n\r\nexport const Text = ({ text, color, hasImages }: { text: string, color?: string, hasImages?: boolean }) => {\r\n  if (hasImages || text?.length > 100) {\r\n    return (<p>{text}</p>)\r\n  }\r\n\r\n  return (<div className=\"hightligtedText\" style={{ backgroundColor: color }}>\r\n    {text}\r\n  </div>)\r\n}\r\n\r\nconst CarouselImages = ({ images }: { images: any[] }) => {\r\n  return (<Carousel >\r\n    {images.map((image) => (<Carousel.Item>\r\n      <Image publicKey={image.publicKey} width={'800px'} height={'600px'} />\r\n      <Carousel.Caption>\r\n        <h3>First slide label</h3>\r\n        <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n      </Carousel.Caption>\r\n    </Carousel.Item>))\r\n    }\r\n\r\n  </Carousel>)\r\n}\r\n\r\nexport const PreviewImage = ({ src, width, height }: { src: string, width?: string | number, height?: string | number }) => {\r\n  const _width = width || '100px'\r\n  const _height = height || '100px'\r\n\r\n  return (\r\n    <div style={{\r\n      overflow: 'hidden',\r\n      width: _width,\r\n      height: _height\r\n    }}>\r\n      <img\r\n        alt=''\r\n        style={{\r\n          objectFit: 'cover',\r\n          width: '100%',\r\n          minHeight: '100%'\r\n        }}\r\n        src={src} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Posts\r\n","import React, { useEffect } from 'react'\r\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom'\r\nimport { ApolloProvider } from '@apollo/client'\r\n\r\nimport Register from './pages/public/Login/Register'\r\nimport Login from './pages/public/Login/Login'\r\nimport ForgottenPassword from './pages/public/Login/ForgottenPassword'\r\nimport ForgottenPasswordReset from './pages/public/Login/ForgottenPasswordReset'\r\nimport VerifyUser from './pages/public/Login/VerifyUser'\r\nimport { PassportCallback } from './pages/public/Login/PassportCallback'\r\n\r\nimport Home from './pages/public/Home/Home'\r\nimport Header from './components/Header/Header'\r\nimport UserDashboard from './pages/user/UserDashboard/UserDashboard'\r\nimport ProtectedRoute from './components/ProtectedRoute/ProtectedRoute'\r\nimport UsersList from './pages/admin/Users/UsersList'\r\nimport UserRolesList from './pages/admin/UserRoles/UserRolesList'\r\nimport UserRoleEdit from './pages/admin/UserRoles/UserRolesEdit'\r\nimport Posts from './pages/user/Posts/Posts'\r\nimport Posts2 from './pages/user/Posts2/Posts2'\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      {/*\r\n              A <Switch> looks through all its children <Route>\r\n              elements and renders the first one whose path\r\n              matches the current URL. Use a <Switch> any time\r\n              you have multiple routes, but you want only one\r\n              of them to render at a time\r\n            */}\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/posts\">\r\n          <Posts />\r\n        </Route>\r\n        <Route exact path=\"/posts2\">\r\n          <Posts2 />\r\n        </Route>\r\n        <Route exact path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/login/facebook\">\r\n          <PassportCallback type={'facebook'} />\r\n        </Route>\r\n        <Route path=\"/login/github\">\r\n          <PassportCallback type={'github'} />\r\n        </Route>\r\n        <Route path=\"/login/google\">\r\n          <PassportCallback type={'google'} />\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          <Register />\r\n        </Route>\r\n\r\n        <Route path=\"/forgotten-password/:token\" component={ForgottenPasswordReset} />\r\n        <Route exact path=\"/forgotten-password\">\r\n          <ForgottenPassword />\r\n        </Route>\r\n\r\n        <Route path=\"/verify-user/:verifyToken\" component={VerifyUser} />\r\n\r\n        <ProtectedRoute path=\"/user/dashboard\">\r\n          <UserDashboard />\r\n        </ProtectedRoute>\r\n        <Route path=\"/user/info\">{/* <UserInfo /> */}</Route>\r\n\r\n        <ProtectedRoute path=\"/admin/users\" role={'admin'}>\r\n          <UsersList adminMode={true} />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path=\"/admin/roles\" role={'admin'}>\r\n          <UserRolesList adminMode={true} />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path=\"/user/roles/:id\" role={'admin'} children={<UserRoleEdit />} />\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\r\nimport userReducer from './reducers/userSlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n})\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nexport const refreshToken = async () => {\r\n    const userId = localStorage.getItem('user.id')\r\n    const token = localStorage.getItem('user.token')\r\n    const refreshToken = localStorage.getItem('user.refreshToken')\r\n    return axios.post(`${process.env.REACT_APP_HOST}`, {\r\n        query: `\r\n            mutation refreshToken($userId: ID!, $token: String!, $refreshToken:String!){\r\n                refreshToken_v1(userId: $userId, token: $token, refreshToken:$refreshToken){\r\n                    token,\r\n                    refreshToken\r\n                }\r\n            }\r\n        `,\r\n        variables: {\r\n            userId,\r\n            token,\r\n            refreshToken\r\n        }\r\n    })\r\n}","import { ApolloClient, InMemoryCache, createHttpLink, ApolloLink, fromPromise } from '@apollo/client'\r\nimport { setContext } from '@apollo/client/link/context'\r\nimport { onError } from '@apollo/client/link/error'\r\nimport { refreshToken } from './refreshToken'\r\nimport { RetryLink } from '@apollo/client/link/retry'\r\n\r\nconst retryLink = new RetryLink({\r\n  attempts: (count, operation, error) => {\r\n    return true\r\n  },\r\n  delay: (count, operation, error) => {\r\n    return count * 1000 * Math.random()\r\n  },\r\n})\r\n\r\nlet isRefreshing = false\r\nlet pendingRequests: any = []\r\n\r\nconst resolvePendingRequests = () => {\r\n  //@ts-ignore\r\n  pendingRequests.map((callback) => callback())\r\n  pendingRequests = []\r\n}\r\n\r\n// https://able.bio/AnasT/apollo-graphql-async-access-token-refresh--470t1c8\r\nconst refreshTokenAction = (forward: any, operation: any) => {\r\n  // error code is set to UNAUTHENTICATED\r\n  // when AuthenticationError thrown in resolver\r\n  let forward$\r\n\r\n  if (!isRefreshing) {\r\n    isRefreshing = true\r\n    forward$ = fromPromise(\r\n      refreshToken()\r\n        // @ts-ignore\r\n        .then(({ data }) => {\r\n          const {\r\n            data: { refreshToken_v1 },\r\n          } = data\r\n          localStorage.setItem('user.token', refreshToken_v1.token)\r\n          localStorage.setItem('user.refreshToken', refreshToken_v1.refreshToken)\r\n\r\n          // Store the new tokens for your auth link\r\n          resolvePendingRequests()\r\n          const oldHeaders = operation.getContext().headers\r\n          // modify the operation context with a new token\r\n          operation.setContext({\r\n            headers: {\r\n              ...oldHeaders,\r\n              authorization: `Bearer ${refreshToken_v1.token}`,\r\n            },\r\n          })\r\n          return forward(operation)\r\n        })\r\n        .catch((error) => {\r\n          pendingRequests = []\r\n          // Handle token refresh errors e.g clear stored tokens, redirect to login, ...\r\n          return\r\n        })\r\n        .finally(() => {\r\n          isRefreshing = false\r\n        }),\r\n    ).filter((value) => Boolean(value))\r\n  } else {\r\n    // Will only emit once the Promise is resolved\r\n    forward$ = fromPromise(\r\n      new Promise((resolve) => {\r\n        // @ts-ignore\r\n        pendingRequests.push(() => resolve())\r\n      }),\r\n    )\r\n  }\r\n\r\n  // @ts-ignore\r\n  return forward$.flatMap(() => {\r\n    return forward(operation)\r\n  })\r\n}\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('user.token')\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  }\r\n})\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: `${process.env.REACT_APP_HOST}`,\r\n})\r\n\r\n// @ts-ignore\r\nconst erroLink = onError(({ graphQLErrors, networkError, operation, forward }) => {\r\n  if (graphQLErrors){\r\n    if(graphQLErrors.some((error) => (error as any).tokenExpired)) {\r\n      return refreshTokenAction(forward, operation)\r\n    }\r\n    graphQLErrors.map(({ message, locations, path }) => console.log(`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`))\r\n  }\r\n\r\n  if (networkError) console.log(`[Network error]: ${networkError}`)\r\n})\r\nexport const apolloClient = new ApolloClient({\r\n  link: ApolloLink.from([retryLink, erroLink, authLink, httpLink]),\r\n  cache: new InMemoryCache(),\r\n  defaultOptions: {\r\n    watchQuery: {\r\n      errorPolicy: 'none',\r\n    },\r\n    query: {\r\n      errorPolicy: 'none',\r\n    },\r\n    mutate: {\r\n      errorPolicy: 'all',\r\n    },\r\n  },\r\n})\r\n\r\nexport default apolloClient\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { store } from './app/store'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { ApolloProvider } from '@apollo/client'\r\nimport apolloClient from './app/apolloClient'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ApolloProvider client={apolloClient}>\r\n        <BrowserRouter basename={process.env.REACT_APP_BASENAME}>\r\n          <App />\r\n        </BrowserRouter>\r\n      </ApolloProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}