{"version":3,"sources":["app/utils.ts","pages/public/Login/PasswordComponent.tsx","app/hooks.ts","app/reducers/userSlice.ts","pages/public/Login/Register.tsx","pages/public/Login/utils.ts","pages/public/Login/Login.tsx","pages/public/Login/ForgottenPassword.tsx","pages/public/Login/ForgottenPasswordReset.tsx","pages/public/Login/VerifyUser.tsx","pages/public/Login/PassportCallback.tsx","pages/public/Home/Post.tsx","pages/public/Home/Home.tsx","components/Header/AdminHeader.tsx","components/Header/PublicHeader.tsx","components/Header/UserHeader.tsx","components/Header/Header.tsx","pages/user/UserDashboard/UserDashboard.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/List/FilterItem.tsx","components/List/RowItem.tsx","components/List/Row.tsx","components/Loading/Loading.tsx","components/DeleteModal/DeleteModal.tsx","components/Unauthorized/Unauthorized.tsx","components/List/Table.tsx","components/List/FilteredList.tsx","components/Editor/Editor.tsx","components/List/ConnectBase.tsx","pages/admin/Users/UsersList.tsx","pages/admin/UserRoles/UserRolesList.tsx","components/Editor/Control.tsx","pages/admin/UserRoles/UserRolesEdit.tsx","pages/user/Posts/Posts.tsx","App.tsx","app/store.ts","serviceWorker.ts","app/refreshToken.ts","app/apolloClient.ts","index.tsx"],"names":["getGraphqlMonsterClientAppRoot","process","substr","length","isEmailValid","email","RegExp","test","passwordStrong","password","valid","strong","name","variant","capital","lower","number","value","percentage","PasswordComponent","onPasswordChange","strongPassword","Form","Group","controlId","Label","Control","type","placeholder","onChange","isInvalid","Text","ProgressBar","now","label","useAppDispatch","useDispatch","useSelector","initialState","localStorage","getItem","user","token","id","roles","split","map","role","verified","Boolean","userFromStorage","state","userSlice","createSlice","reducers","changeState","action","payload","login","userToken","setItem","refreshToken","toString","r","logout","removeItem","selectUser","actions","REGISTER_MUTATION","Register","useState","setEmail","pass","setPass","copy","setCopy","history","useHistory","dispatch","useMutation","errorPolicy","registerMutation","loading","data","error","invalidEmail","setInvalidEmail","emailProbablyTaken","setEmailProbablyTaken","setStrong","invalidCopy","setInvalidCopy","onRegister","a","variables","register_v1","replace","console","log","data-bgimage","className","data-scroll-speed","method","Alert","to","event","target","c","Button","onClick","disabled","LOGIN_QL","Login","invalidPass","setInvalidPass","query","URLSearchParams","location","search","path","get","loginMutation","onLogin","login_v1","onBackClick","goBack","href","FORGOTTEN_PASSWORD_REQUEST_MUTATION","ForgottenPassword","emailSent","setEmailSent","doForgottenPassword","onRequestSend","FORGOTTEN_PASSWORD_CHECK_MUTATION","FORGOTTEN_PASSWORD_RESET_MUTATION","ForgotenPasswordReset","match","_","setPassword","doForgottenPasswordCheck","loadingForgottenPasswordCheck","dataForgottenPasswordCheck","doForgottenPasswordReset","useEffect","doCheck","onReset","reset","check","status","isPasswordValid","VERIFY_EMAIL_MUTATION","gql","VerifyUser","verifyToken","setVerified","verify","verifying","verifiedError","doVerifyUser","verifyEmail_v1","setTimeout","previouslyVerified","onVerifyUser","tokenFromFacebookCode","code","axios","PassportCallback","useLocation","codeRaw","setError","showError","errorMessage","response","JSON","parse","message","request","Post","post","text","Home","posts","setPosts","setText","newPosts","idx","UserHeader","onLogout","Dropdown","Toggle","Menu","Item","PublicHeader","Header","find","AdminHeader","UserDashboard","ProtectRoute","exact","children","basicOptionsName","contains","not_contains","starts_with","not_starts_with","ends_with","not_ends_with","isEmpty","FilterItem","fields","fieldSelected","setFieldSelected","optionSelected","setOptionSelected","filterText","setFilterText","filter","setFilter","doFilter","useCallback","f","processFilter","field","option","gc","o","o2","go","InputGroup","DropdownButton","as","Prepend","title","Object","getOwnPropertyNames","e","ListRowItem","item","fieldDesc","names","element","getElementFromField","component","push","reduce","p","ListRow","onDelete","showDelete","onEdit","getEditLink","doEdit","editLink","useMemo","toLowerCase","Fragment","tabIndex","onKeyPress","size","Loading","what","DeleteModal","show","onHide","categoryName","deleteObjectId","deleteObjectName","deleting","showMe","setShowMe","lastShow","setLastShow","onHideAction","Modal","closeButton","Title","Body","Footer","Unauthorized","where","Table","adminMode","queries","unauthorized","setUnauthorized","deleteObject","setDeleteObject","showDeleteDialog","setShowDeleteDialog","deletingOnDeleteDialog","setDeletingOnDeleteDialog","setLoading","setData","useQuery","ADMIN_LIST_QUERY","USER_LIST_QUERY","onError","onCompleted","d","dataFields","userRefetch","refetch","userLoading","DELETE_MUTATION","deleteProject","onHideDidaloDelete","deleteProjectMutation","obj","responsive","projectItem","createFilter","AND","addAnd","node","filterDestructNode","n","filterDestruct","fo","params","FilteredList","userId","staticFilter","onCreate","createDefaultFilter","defaultFilter","user_every","filterDestructed","onFilterChange","getDataFromRaw","rawData","keys","Editor","form","renameError","onUpdated","updateCache","undefined","localId","setLocalId","errors","setErrors","storedData","setStoredData","handleError","incommingError","incomingErrors","raw","skipLoading","QUERY","skip","loadedDataRaw","loadedData","updateDataFromLoaded","CREATE_MUTATION","update","createProjectMutation","UPDATE_MUTATION","updateProjectMutation","onSubmit","ConnectBase","elementTitle","setTitle","iraw","final","checked","indexOf","ADD","addMutation","REMOVE","removeMutation","updated","updateTitle","id1","id2","onChecked","Check","QUERY_ALL_USERS_ADMIN","USER_ROLE_QUERY","MUTATION_ADD_USER_ROLE_TO_USER","MUTATION_REMOVE_USER_ROLE_FROM_USER","MUTATION_REMOVE_USER","ConnectRole","UsersList","UserRoleList","required","register","formState","setValue","touchedFields","dirtyFields","FormControl","Feedback","UserRoleForm","reactForm","userRoleId","graphQlError","useForm","handleSubmit","getValues","watch","UserRoleEdit","useParams","ALL_QUERY","REMOVE_MUTATION","Posts","postForRemoveId","setPostForRemoveId","createPost","removePost","addPost","allPost","App","ForgottenPasswordReset","ProtectedRoute","UserRolesList","store","configureStore","reducer","userReducer","window","hostname","retryLink","RetryLink","attempts","count","operation","delay","Math","random","isRefreshing","pendingRequests","unautheniticatedAction","forward","forward$","fromPromise","Promise","resolve","then","refreshToken_v1","callback","oldHeaders","getContext","headers","setContext","authorization","catch","finally","flatMap","authLink","httpLink","createHttpLink","uri","erroLink","graphQLErrors","networkError","locations","apolloClient","ApolloClient","link","ApolloLink","from","cache","InMemoryCache","defaultOptions","watchQuery","mutate","ReactDOM","render","StrictMode","ApolloProvider","client","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01804c5c.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { UserToken } from './reducers/userSlice'\r\n\r\nexport const getGraphqlMonsterClientAppRoot = () =>\r\n  process.env.REACT_APP_HOST?.substr(0, process.env.REACT_APP_HOST?.length - 8)\r\n\r\nexport const isEmailValid = (email: string) => {\r\n  if (process.env.NODE_ENV === 'development') return true\r\n\r\n  return new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(email)\r\n}\r\n\r\nexport const isPasswordValid = (password: string) => {\r\n  //if(process.env.NODE_ENV === 'development') return true\r\n\r\n  const regularExpression = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/\r\n  return regularExpression.test(password)\r\n}\r\n\r\nexport interface IPasswordStrongResult {\r\n  valid: boolean\r\n  strong: number\r\n  name: string\r\n  variant: string\r\n}\r\nexport const passwordStrong = (password: string): IPasswordStrongResult => {\r\n  const length = password.length\r\n\r\n  if (length < 1) {\r\n    return {\r\n      valid: false,\r\n      strong: 0,\r\n      name: '',\r\n      variant: 'danger',\r\n    } as IPasswordStrongResult\r\n  }\r\n\r\n  if (length >= 15) {\r\n    return {\r\n      valid: true,\r\n      strong: 100,\r\n      name: 'strong',\r\n      variant: 'success',\r\n    } as IPasswordStrongResult\r\n  }\r\n\r\n  const capital = /(?=.*[A-Z]){2,}/.test(password) ? 2 : /(?=.*[A-Z])/.test(password) ? 1 : 0\r\n  const lower = /(?=.*[a-z]){2,}/.test(password) ? 2 : /(?=.*[a-z])/.test(password) ? 1 : 0\r\n  const number = /(?=.*[0-9]){2,}/.test(password) ? 2 : /(?=.*[0-9])/.test(password) ? 1 : 0\r\n  const special = /(?=.*[!@#$%^&*]){2,}/.test(password)\r\n    ? 2\r\n    : /(?=.*[!@#$%^&*])/.test(password)\r\n    ? 1\r\n    : 0\r\n\r\n  const value = capital + lower + number + special\r\n\r\n  const valid = (length > 7 && lower > 0 && number > 0) || process.env.NODE_ENV === 'development'\r\n  let percentage = value + length / 4\r\n  if (percentage > 10) percentage = 10\r\n\r\n  return {\r\n    valid,\r\n    strong: percentage * 10,\r\n    name: value > 6 ? 'strong' : value > 4 ? 'intermediate' : valid ? 'weak' : 'poor',\r\n    variant: percentage > 6 ? 'success' : valid ? 'warning' : 'danger',\r\n  } as IPasswordStrongResult\r\n}\r\n\r\nexport const uploadFile = async (event: React.FormEvent<HTMLInputElement>, user: UserToken) => {\r\n  const files = event.currentTarget?.files || []\r\n  const file = files[0]\r\n\r\n  const data = new FormData()\r\n  data.append('file', file)\r\n  return new Promise(async (resolve, reject) => {\r\n    const event = await axios.post(`${getGraphqlMonsterClientAppRoot()}/upload`, data, {\r\n      // authorization: Bearer\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    })\r\n    resolve(event)\r\n  })\r\n}\r\n","import React from 'react'\r\nimport { Form, ProgressBar } from 'react-bootstrap'\r\nimport { IPasswordStrongResult } from '../../../app/utils'\r\n\r\nexport interface IPasswordComponent {\r\n    strongPassword: IPasswordStrongResult,\r\n    password: string\r\n    onPasswordChange: (arg:any) => void\r\n}\r\n\r\nexport const PasswordComponent:React.FC<IPasswordComponent> = ({onPasswordChange, password, strongPassword}) => (\r\n    <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={onPasswordChange}\r\n            value={password}\r\n            isInvalid={!strongPassword.valid}\r\n        />\r\n        <Form.Text>Make sure it's at least 15 characters OR at least 8 characters including a number and a lowercase letter</Form.Text>\r\n        <ProgressBar now={strongPassword.strong} label={strongPassword.name} variant={strongPassword.variant}/>\r\n    </Form.Group>\r\n)\r\n\r\nexport default PasswordComponent","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { RootState } from '../store'\r\n\r\nexport interface UserToken {\r\n  token: string\r\n  refreshToken: string\r\n  user: User\r\n}\r\n\r\nexport interface User {\r\n  id: string\r\n  email: string\r\n  verified: boolean\r\n  roles: UserRole[]\r\n  selectedOrgId?: string\r\n}\r\n\r\nexport interface UserRole {\r\n  name: string\r\n}\r\n\r\nexport interface UserState {\r\n  user?: UserWithToken\r\n  state: 'no-user' | 'processing' | 'user-login'\r\n}\r\n\r\nexport type UserWithToken = User & {\r\n  token: string\r\n}\r\n\r\nconst userToStorage = (userToken: UserToken) => {\r\n  localStorage.setItem('user.token', userToken.token)\r\n  localStorage.setItem('user.refreshToken', userToken.refreshToken)\r\n  localStorage.setItem('user.id', userToken.user.id)\r\n  localStorage.setItem('user.email', userToken.user.email)\r\n  localStorage.setItem('user.verified', Boolean(userToken.user.verified).toString())\r\n  localStorage.setItem('user.roles', userToken.user.roles.map((r) => r.name).toString())\r\n}\r\n\r\nconst removeUserFromStorage = () => {\r\n  localStorage.removeItem('user.refreshToken')\r\n  localStorage.removeItem('user.token')\r\n  localStorage.removeItem('user.id')\r\n  // localStorage.removeItem('user.email')\r\n  localStorage.removeItem('user.verified')\r\n  localStorage.removeItem('user.roles')\r\n}\r\n\r\nconst userFromStorage = () => {\r\n  const token = localStorage.getItem('user.token')\r\n  if (!token) {\r\n    return\r\n  }\r\n\r\n  return {\r\n    token,\r\n    email: localStorage.getItem('user.email'),\r\n    id: localStorage.getItem('user.id'),\r\n    roles: localStorage\r\n      .getItem('user.roles')\r\n      ?.split(',')\r\n      .map((role) => ({ name: role })),\r\n    verified: Boolean(localStorage.getItem('user.verified')),\r\n  } as UserWithToken\r\n}\r\n\r\nconst initialSelected = localStorage.getItem('organization.selected')\r\n\r\nconst initialState: UserState = {\r\n  user: userFromStorage(),\r\n  state: 'no-user',\r\n}\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    changeState: (state, action: PayloadAction<UserState['state']>) => {\r\n      state.state = action.payload\r\n    },\r\n    login(state, action: PayloadAction<UserToken>) {\r\n      userToStorage(action.payload)\r\n      state.user = {\r\n        id: action.payload.user.id,\r\n        token: action.payload.token,\r\n        email: action.payload.user.email,\r\n        roles: action.payload.user.roles,\r\n        verified: Boolean(action.payload.user.verified),\r\n      } as UserWithToken\r\n    },\r\n    logout(state) {\r\n      removeUserFromStorage()\r\n      delete state.user\r\n    },\r\n  },\r\n})\r\n\r\nexport const selectUser = (state: RootState) => state.user.user\r\n// Action creators are generated for each case reducer function\r\nexport const { login, logout, changeState } = userSlice.actions\r\n\r\nexport default userSlice.reducer\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Modal, Form, Alert, Button, ProgressBar } from \"react-bootstrap\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { isEmailValid, passwordStrong } from \"../../../app/utils\";\r\nimport PasswordComponent from \"./PasswordComponent\";\r\nimport { loader } from 'graphql.macro';\r\nimport { useAppDispatch } from \"../../../app/hooks\";\r\nimport { login, UserToken, changeState } from \"../../../app/reducers/userSlice\";\r\n\r\nexport const REGISTER_MUTATION = loader('./graphql/register.gql')\r\n\r\nexport const Register: React.FC = () => {\r\n  const defaultPath = process.env.REACT_APP_DEFAULT_USER_PATH || '/user/dashboard'\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [copy, setCopy] = useState(\"\");\r\n\r\n  const history = useHistory()\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [registerMutation, { loading, data, error }] = useMutation(REGISTER_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const [invalidEmail, setInvalidEmail] = useState(false);\r\n  const [emailProbablyTaken, setEmailProbablyTaken] = useState(false);\r\n  const [strong, setStrong] = useState(passwordStrong(''))\r\n\r\n  const [invalidCopy, setInvalidCopy] = useState(false);\r\n\r\n  const onRegister = async () => {\r\n    if (!isEmailValid(email)) {\r\n      return setInvalidEmail(true)\r\n    }\r\n\r\n    if (pass !== copy) {\r\n      setInvalidCopy(true)\r\n      return\r\n    }\r\n\r\n    try {\r\n      dispatch(changeState('processing'))\r\n      const { data } = await registerMutation({ variables: { email, pass } })\r\n      const userToken = data.register_v1 as UserToken\r\n\r\n      dispatch(login(userToken))\r\n\r\n      history.replace(defaultPath)\r\n    } catch (ex) {\r\n      console.log('onError', data)\r\n      setEmailProbablyTaken(true)\r\n    }\r\n\r\n  };\r\n\r\n  const onEmailChange = (event: any) => {\r\n    setEmail(event.target.value);\r\n    setInvalidEmail(false);\r\n    setEmailProbablyTaken(false)\r\n  };\r\n\r\n  const onPasswordChange = (event: any) => {\r\n    const pass = event.target.value as string\r\n\r\n    setPass(pass);\r\n    setInvalidEmail(false);\r\n    setStrong(passwordStrong(pass))\r\n  };\r\n\r\n  const onCopyChange = (event: any) => {\r\n    const c = event.target.value\r\n    setCopy(c)\r\n    setInvalidEmail(false)\r\n\r\n    if (c == pass) {\r\n      setInvalidCopy(false)\r\n    }\r\n  };\r\n\r\n  return (<>\r\n    <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n      <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                <div className=\"col-md-12 text-center\">\r\n                  <h1>User Registration</h1>\r\n                  <p>All big things starting here</p>\r\n                </div>\r\n                <div className=\"clearfix\"></div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <form name=\"contactForm\" id='contact_form' className=\"form-border\" method=\"post\" action='blank.php'>\r\n\r\n\r\n              <Form>\r\n                {invalidEmail && (<Alert variant={\"danger\"}>Email is not in good shape...</Alert>)}\r\n                {emailProbablyTaken && (<Alert variant={\"danger\"}>Email is probably taken, did you <Link to=\"/forgotten-password\">forgotten password</Link>?</Alert>)}\r\n                {invalidCopy && (<Alert variant={\"danger\"}>The retyped password is not the same</Alert>)}\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    onChange={onEmailChange}\r\n                    value={email}\r\n                    isInvalid={invalidEmail}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                <PasswordComponent password={pass} onPasswordChange={onPasswordChange} strongPassword={strong} />\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Re-Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Retype Password\"\r\n                    onChange={onCopyChange}\r\n                    value={copy}\r\n                    isInvalid={invalidCopy}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n\r\n              <div id='submit' className=\"pull-left\">\r\n                {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onRegister()}>Register</Button>}\r\n                {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n\r\n                <div className=\"clearfix\"></div>\r\n\r\n                <div className=\"spacer-single\"></div>\r\n\r\n                {/* <ul className=\"list s3\">\r\n                  <li>Or login with:</li>\r\n                  <li><a href=\"#\">Facebook</a></li>\r\n                  <li><a href=\"#\">Google</a></li>\r\n                  <li><a href=\"#\">Instagram</a></li>\r\n                </ul> */}\r\n\r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","\r\n\r\nexport const isEmailValid = (email: string) => {\r\n    if(process.env.NODE_ENV === 'development') return true\r\n\r\n    return new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(email)\r\n}\r\n\r\nexport const isPasswordValid = (password: string) => {\r\n    //if(process.env.NODE_ENV === 'development') return true\r\n\r\n    const regularExpression = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/\r\n    return regularExpression.test(password)\r\n}\r\n\r\nexport interface IPasswordStrongResult {\r\n    valid: boolean\r\n    strong: number\r\n    name: string\r\n    variant: string\r\n}\r\nexport const passwordStrong = (password: string):IPasswordStrongResult => {\r\n    const length = password.length\r\n\r\n    if(length < 1){\r\n        return {\r\n           valid: false,\r\n           strong: 0,\r\n           name: '',\r\n           variant: 'danger'  \r\n        } as IPasswordStrongResult\r\n    }\r\n\r\n    if(length >= 15){\r\n        return {\r\n            valid: true,\r\n            strong: 100,\r\n            name: 'strong',\r\n            variant: 'success' \r\n         } as IPasswordStrongResult\r\n    }\r\n\r\n    const capital = /(?=.*[A-Z]){2,}/.test(password) ? 2 : ( /(?=.*[A-Z])/.test(password) ? 1 : 0)\r\n    const lower = /(?=.*[a-z]){2,}/.test(password) ? 2 : ( /(?=.*[a-z])/.test(password) ? 1 : 0)\r\n    const number = /(?=.*[0-9]){2,}/.test(password) ? 2 : ( /(?=.*[0-9])/.test(password) ? 1 : 0)\r\n    const special = /(?=.*[!@#$%^&*]){2,}/.test(password) ? 2 : ( /(?=.*[!@#$%^&*])/.test(password) ? 1 : 0)\r\n    \r\n    const value = capital + lower + number + special\r\n\r\n    const valid = (length > 7 && lower > 0 && number > 0) || process.env.NODE_ENV === 'development'\r\n    let percentage = (value+(length/4))\r\n    if(percentage > 10) percentage = 10\r\n\r\n    return {\r\n        valid,\r\n        strong: percentage * 10,\r\n        name: value > 6 ? 'strong' : (value > 4 ? 'intermediate' : (valid ? 'weak' : 'poor')),\r\n        variant: percentage > 6 ? 'success' : (valid ? 'warning' : 'danger'),\r\n    } as IPasswordStrongResult\r\n    \r\n}","import { useMutation } from '@apollo/client';\r\nimport { loader } from 'graphql.macro';\r\nimport React, { useState } from 'react';\r\nimport { Alert, Button, Form } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAppDispatch } from '../../../app/hooks';\r\nimport { changeState, login, UserToken } from '../../../app/reducers/userSlice';\r\nimport { getGraphqlMonsterClientAppRoot } from '../../../app/utils';\r\nimport { isEmailValid } from './utils';\r\n\r\nexport const LOGIN_QL = loader('./graphql/login.gql')\r\n\r\nexport const Login: React.FC = () => {\r\n    const [email, setEmail] = useState(localStorage.getItem('user.email') || '')\r\n    const [pass, setPass] = useState('')\r\n\r\n    const [invalidEmail, setInvalidEmail] = useState(false)\r\n    const [invalidPass, setInvalidPass] = useState(false)\r\n\r\n    const history = useHistory()\r\n    const query = new URLSearchParams(history.location.search)\r\n    const path = query.get('path')\r\n    const role = query.get('role')\r\n    const defaultPath = process.env.REACT_APP_DEFAULT_USER_PATH || '/user/dashboard'\r\n\r\n    const dispatch = useAppDispatch();\r\n    const [loginMutation, { loading, data, error }] = useMutation(LOGIN_QL, { errorPolicy: 'none' });\r\n\r\n    const onLogin = async () => {\r\n        if (!isEmailValid(email)) {\r\n            return setInvalidEmail(true)\r\n        }\r\n\r\n        try {\r\n            dispatch(changeState('processing'))\r\n            const { data }: any = await loginMutation({ variables: { email, pass } })\r\n            const userToken = data.login_v1 as UserToken\r\n\r\n            dispatch(login(userToken))\r\n            // go to path in case user want to reach some page before login\r\n            // or go to default path\r\n            history.replace(path || defaultPath)\r\n        } catch (e) {\r\n            setInvalidEmail(true)\r\n            setInvalidPass(true)\r\n            setPass('')\r\n        }\r\n    }\r\n\r\n    const onEmailChange = (event: any) => {\r\n        setEmail(event.target.value)\r\n        setInvalidEmail(false)\r\n        setInvalidPass(false)\r\n    }\r\n\r\n    const onPasswordChange = (event: any) => {\r\n        setPass(event.target.value)\r\n        setInvalidEmail(false)\r\n        setInvalidPass(false)\r\n    }\r\n\r\n    const onBackClick = () => {\r\n        history.goBack()\r\n    }\r\n\r\n    return (<>\r\n        <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n            <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 offset-md-2\">\r\n                            <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                                <div className=\"col-md-12 text-center\">\r\n                                    <h1>User Login</h1>\r\n                                    <p>We was missed you already</p>\r\n                                    {role && <Alert variant={'warning'}>You trying to reach part what is under registered user with <b>{role}</b> role protection. <Link to={'/'} onClick={onBackClick}>Please take me back</Link></Alert>}\r\n                                    {(!role && path) && <Alert variant={'warning'}>You trying to reach part what is under registered user protection. <Link to={'/'} onClick={onBackClick}>Please take me back</Link></Alert>}\r\n                                </div>\r\n                                <div className=\"clearfix\"></div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n        <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 offset-md-3\">\r\n                        <Form name=\"contactForm\" id='contact_form' className=\"form-border\" >\r\n                            {!invalidPass && <h3>Login to your account</h3>}\r\n                            {invalidPass && <Alert variant={'danger'}>Email or password is not valid. Did You <Link to=\"/forgotten-password\">forgotten your password</Link>?</Alert>}\r\n                            {invalidEmail && (<Alert variant={\"danger\"}>Email is not in good shape...</Alert>)}\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter email\" onChange={onEmailChange} value={email} isInvalid={invalidEmail} />\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type='password' onChange={onPasswordChange} value={pass} isInvalid={invalidPass} />\r\n                                <Form.Text className=\"text-muted\">\r\n                                    We'll never share your password with anyone else.\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <div id='submit' className=\"pull-left\">\r\n                                {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onLogin()}>Login</Button>}\r\n                                {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n                                <div className=\"clearfix\"></div>\r\n\r\n                                <div className=\"spacer-single\"></div>\r\n\r\n                                <ul className=\"list s3\">\r\n                                    <li>Or login with:</li>\r\n                                    <li><a href={`${getGraphqlMonsterClientAppRoot()}/auth/github`}>GitHub</a></li>\r\n                                    <li><a href={`${getGraphqlMonsterClientAppRoot()}/auth/facebook`}>Facebook</a></li>\r\n                                    <li><a href={`${getGraphqlMonsterClientAppRoot()}/auth/google`}>Google</a></li>\r\n                                </ul>\r\n\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </>)\r\n}\r\n\r\nexport default Login","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Modal, Form, Alert, Button } from \"react-bootstrap\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { isEmailValid } from \"../../../app/utils\";\r\nimport { loader } from \"graphql.macro\";\r\n\r\nconst FORGOTTEN_PASSWORD_REQUEST_MUTATION = loader('./graphql/forgotten-password-request.gql');\r\n\r\nexport const ForgottenPassword: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [invalidEmail, setInvalidEmail] = useState(false);\r\n  const [emailSent, setEmailSent] = useState(false)\r\n\r\n  const history = useHistory()\r\n\r\n  const [checkResetEmail, { loading: loadingCheckResetEmail, data: checkResetEmailData, error: checkResetEmailError }] = useMutation(FORGOTTEN_PASSWORD_REQUEST_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const [doForgottenPassword, { loading, data, error }] = useMutation(FORGOTTEN_PASSWORD_REQUEST_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const onRequestSend = async () => {\r\n    setEmailSent(false)\r\n    if(email && isEmailValid(email)){\r\n      setInvalidEmail(false)\r\n      try {\r\n        const { data } = await doForgottenPassword({ variables: { email } })\r\n        setEmailSent(true)\r\n      } catch (ex) {\r\n        console.log('onError', data)\r\n        setInvalidEmail(true)\r\n      }\r\n    } else {\r\n      setInvalidEmail(true)\r\n    }\r\n  };\r\n\r\n  const onEmailChange = (event: any) => {\r\n    setEmail(event.target.value);\r\n    setInvalidEmail(false);\r\n  };\r\n\r\n  if(emailSent) {\r\n    return (\r\n      <>\r\n      <Alert variant={\"success\"}>We sent to You instruction to email {email}. Check your mailbox (don't forget check spam as well)</Alert>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (<>\r\n    <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n      <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                <div className=\"col-md-12 text-center\">\r\n                  <h1>Forgotten Password</h1>\r\n                  <p>Shortly You will be back</p>\r\n                </div>\r\n                <div className=\"clearfix\"></div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3\">\r\n            <form name=\"contactForm\" id='contact_form' className=\"form-border\" method=\"post\" action='blank.php'>\r\n\r\n\r\n              <Form>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    onChange={onEmailChange}\r\n                    value={email}\r\n                    isInvalid={invalidEmail}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                \r\n              </Form>\r\n\r\n              <div id='submit' className=\"pull-left\">\r\n                {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onRequestSend()}>Send Recovery Link</Button>}\r\n                {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n\r\n                <div className=\"clearfix\"></div>\r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default ForgottenPassword;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Modal, Form, Alert, Button, ProgressBar } from \"react-bootstrap\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { isEmailValid, isPasswordValid, passwordStrong } from \"../../../app/utils\";\r\nimport _ from \"lodash\";\r\nimport PasswordComponent from \"./PasswordComponent\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login, changeState } from \"../../../app/reducers/userSlice\";\r\nimport { loader } from \"graphql.macro\";\r\n\r\nexport const FORGOTTEN_PASSWORD_CHECK_MUTATION = loader('./graphql/forgotten-password-check.gql')\r\nexport const FORGOTTEN_PASSWORD_RESET_MUTATION = loader('./graphql/forgotten-password-reset.gql')\r\n\r\n\r\nexport const ForgotenPasswordReset: React.FC<any> = ({match}) => {\r\n  const token = _.get(match, 'params.token')\r\n  const [password, setPassword] = useState(\"\");\r\n  const [copy, setCopy] = useState(\"\");\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const [doForgottenPasswordCheck, { loading: loadingForgottenPasswordCheck, data: dataForgottenPasswordCheck, error: errorForgottenPasswordCheck }] = useMutation(FORGOTTEN_PASSWORD_CHECK_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const [doForgottenPasswordReset, { loading, data, error }] = useMutation(FORGOTTEN_PASSWORD_RESET_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  \r\n  const [invalidPass, setInvalidPass] = useState(false);\r\n  const [strong, setStrong] = useState(passwordStrong(''))\r\n  const [validPass, setValidPass] = useState(false);\r\n\r\n  const [invalidCopy, setInvalidCopy] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    const doCheck = async () => {\r\n      try{\r\n        await doForgottenPasswordCheck({ variables: {token}})\r\n      } catch(ex) {\r\n\r\n      } finally {\r\n      }\r\n      \r\n    }\r\n\r\n    doCheck()\r\n\r\n  }, [token, doForgottenPasswordCheck])\r\n\r\n  const onReset = async () => {\r\n    if(!strong.valid){\r\n      return\r\n    }\r\n\r\n    if (password !== copy) {\r\n      setInvalidCopy(true)\r\n      return\r\n    }\r\n\r\n    try {\r\n      dispatch(changeState('processing'))\r\n      const { data } = await doForgottenPasswordReset({ variables: { token, password } })\r\n      dispatch(login(data.reset))\r\n      history.replace('/user/projects')\r\n    } catch (ex) {\r\n        console.log('onError', data)\r\n        \r\n      }\r\n  \r\n  };\r\n\r\n  const onPasswordChange = (event: any) => {\r\n    const pass = event.target.value as string\r\n\r\n    setPassword(pass);\r\n    const valid = isPasswordValid(pass)\r\n    setInvalidPass(!valid);\r\n    setStrong(passwordStrong(pass))\r\n  };\r\n\r\n  const onCopyChange = (event: any) => {\r\n    const c = event.target.value\r\n    setCopy(c)\r\n    setInvalidPass(false)\r\n\r\n    if (c == password) {\r\n      setInvalidCopy(false)\r\n    }\r\n  };\r\n\r\n  if(loadingForgottenPasswordCheck){\r\n    return (<Alert variant={\"success\"}>Checking token</Alert>)\r\n  } else if ( dataForgottenPasswordCheck && dataForgottenPasswordCheck.check && dataForgottenPasswordCheck.check.status === 'valid') {\r\n    return (<>\r\n      <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\r\n        <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 offset-md-2\">\r\n                <form action='blank.php' className=\"row\" id='form_subscribe' method=\"post\" name=\"myForm\">\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <h1>User Password Reset</h1>\r\n                    <p>You will be back soon</p>\r\n                  </div>\r\n                  <div className=\"clearfix\"></div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n  \r\n      <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3\">\r\n              <form name=\"contactForm\" id='contact_form' className=\"form-border\" method=\"post\" action='blank.php'>\r\n  \r\n  \r\n                <Form>\r\n                {/* {invalidPass && (<Alert variant={\"danger\"}>The password have to contain capital letter,lower letter, a number and must be 6-16 characters long</Alert>)}   */}\r\n                {invalidCopy && (<Alert variant={\"danger\"}>The retyped password is not the same</Alert>)}\r\n                <PasswordComponent password={password} onPasswordChange={onPasswordChange} strongPassword={strong} />\r\n  \r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Re-Password</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Retype Password\"\r\n                      onChange={onCopyChange}\r\n                      value={copy}\r\n                      isInvalid={invalidCopy}\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n  \r\n                <div id='submit' className=\"pull-left\">\r\n                  {!loading && <Button className=\"btn-round\" variant=\"primary\" onClick={() => onReset()} disabled={!strong.valid}>Reset password</Button>}\r\n                  {loading && <Button className=\"btn-round\" variant=\"primary\" disabled>Loading...</Button>}\r\n  \r\n                  <div className=\"clearfix\"></div>\r\n  \r\n  \r\n                </div>\r\n  \r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n    );\r\n  } else {\r\n    return (<Alert variant={\"danger\"}>The <b>{token}</b> is not valid or already used</Alert>)\r\n  }\r\n\r\n  \r\n};\r\n\r\nexport default ForgotenPasswordReset;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Modal, Form, Alert, Button } from \"react-bootstrap\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport * as _ from 'lodash'\r\nimport { login } from \"../../../app/reducers/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($verifyToken: String!) {\r\n    verifyEmail_v1(verifyToken: $verifyToken) {\r\n      refreshToken\r\n      token\r\n      user {\r\n        roles{name}\r\n        id,\r\n        email,\r\n        verified\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VerifyUser: React.FC<any> = ({match}) => {\r\n  const verifyToken = _.get(match, 'params.verifyToken')\r\n  const [verified, setVerified] = useState(false);\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const [verify, { loading: verifying, data, error: verifiedError }] = useMutation(VERIFY_EMAIL_MUTATION, {\r\n    errorPolicy: \"none\",\r\n  });\r\n\r\n  const doVerifyUser = async () => {\r\n    try {\r\n      const { data } = await verify({ variables: { verifyToken } })\r\n      dispatch(login(data.verifyEmail_v1))\r\n      setVerified(true)\r\n      localStorage.setItem('user.verifyToken', verifyToken)\r\n      setTimeout(()=>{\r\n        history.replace('/user/projects')\r\n      }, 2000)\r\n    } catch (ex) {\r\n      console.log('onError', data)\r\n    }\r\n  \r\n  };\r\n\r\n  const onVerifyUser = () => {\r\n    const previouslyVerified = localStorage.getItem('user.verifyToken')\r\n    const userVerified = localStorage.getItem('user.verified') == 'true'\r\n\r\n    // user probably comming with the same link\r\n    // what was for his first verified\r\n    if(userVerified && previouslyVerified == verifyToken) {\r\n      history.replace('/user/projects')\r\n    } else {\r\n      doVerifyUser()\r\n    }\r\n    \r\n  }\r\n\r\n  useEffect(()=>{\r\n   if(verifyToken){\r\n    onVerifyUser()\r\n   }\r\n  }, [verifyToken])\r\n  \r\n\r\n  return (<section>\r\n    <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\r\n    <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n              {verified ? (<div className=\"alert alert-success\" role=\"alert\">Your account was verified <Button>Start creating</Button></div>): null} \r\n              {verifying ? (<div className=\"alert alert-dark\" role=\"alert\">Your accont is verifing...</div>): null}\r\n              {!verifyToken || verifiedError ? ( <div className=\"alert alert-dark\" role=\"alert\">The code is invalid or already applyed</div>): null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>)\r\n};\r\n\r\nexport default VerifyUser;\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport _ from 'lodash'\r\nimport { Alert } from 'react-bootstrap'\r\nimport { getGraphqlMonsterClientAppRoot } from '../../../app/utils'\r\nimport { useAppDispatch } from '../../../app/hooks'\r\nimport { login, UserToken } from '../../../app/reducers/userSlice'\r\n\r\nexport const tokenFromFacebookCode = async (type:string, code: string) => {\r\n    return axios.get(`${getGraphqlMonsterClientAppRoot()}/auth/${type}/callback?code=${code}`)\r\n}\r\n\r\nexport const PassportCallback: React.FC<{type: string}> = ({type}) => {\r\n    const location = useLocation()\r\n    const codeRaw = _.get(location, 'search', '').split('?code=')\r\n    const code = codeRaw.length > 1 ? codeRaw[1] : ''\r\n\r\n\r\n    const history = useHistory()\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [error, setError] = useState<string>()\r\n\r\n    const showError = (errorMessage:string) => {\r\n        setError(errorMessage)\r\n        setTimeout(()=>{\r\n            history.replace('/login')\r\n        }, 4000)\r\n    }\r\n    useEffect(()=>{\r\n        const request = async () => {\r\n            try {\r\n                const data = await tokenFromFacebookCode(type, code)\r\n                dispatch(login(data as any))\r\n                history.replace('/user/projects')\r\n            } catch(ex) {\r\n                const response = JSON.parse(_.get(ex, 'request.response', '{}'))\r\n                showError(response.error?.message || ex.message)\r\n            }\r\n            \r\n           \r\n        }\r\n\r\n        if(code) request()\r\n        else showError('User denied')\r\n    }, [location])\r\n\r\n    return (<>\r\n        {error && <Alert variant={'danger'}>{type} login isn't work due \"{error}\" You will be redirect back to <Link to=\"/login\">Login</Link></Alert>}\r\n    </>)\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport type TPostModel = {\r\n  id: number;\r\n  text: string;\r\n};\r\n\r\nexport type TPostParams = {\r\n  post: TPostModel;\r\n};\r\n\r\nexport const Post = ({ post }: TPostParams) => {\r\n  return (\r\n    <div>\r\n      {post.id} {post.text}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport logo from \"../../../logo.svg\";\r\n// import { Counter } from './features/counter/Counter';\r\nimport \"./Home.css\";\r\nimport { Post, TPostModel } from \"./Post\";\r\n\r\nfunction Home() {\r\n  // const posts: Post[] = [{ text: \"Initial post \" }];\r\n  const [posts, setPosts] = useState<TPostModel[]>([]);\r\n  const [text, setText] = useState<string>(\"\");\r\n  //let text = \"\";\r\n\r\n  const addPost = () => {\r\n    // const newPosts = [];\r\n    // for (const p of posts) {\r\n    //   newPosts.push(p);\r\n    // }\r\n    // newPosts.push({ id: posts.length + 1, text: \"Post \" });\r\n    const newPosts = [...posts, { id: posts.length + 1, text: text }];\r\n\r\n    setText(\"\");\r\n    setPosts(newPosts);\r\n  };\r\n\r\n  const onTextChange = (event: any) => {\r\n    setText(event.target.value);\r\n    //text = event.target.value;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h4>Add Post</h4>\r\n      <input type=\"text\" value={text} onChange={onTextChange} />\r\n      <Button onClick={addPost}>Add Post</Button>\r\n\r\n      <h4>Post</h4>\r\n      {posts.map((post, idx) => (\r\n        <div key={idx}>\r\n          <Post post={post} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\nconst UserHeader = ({user, onLogout}:any) =>  ( <div className=\"header-light transparent scroll-light container\">\r\n<div className=\"row\">\r\n  <div className=\"col-md-2\">\r\n  <Dropdown>\r\n    <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n      Menu\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"/\">Home</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n\r\n  </Dropdown>\r\n\r\n  <Dropdown>\r\n    <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n      Admin\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"/admin/users\">Users</Dropdown.Item>\r\n      <Dropdown.Item href=\"/admin/roles\">Roles</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n    \r\n  </Dropdown>\r\n  </div>\r\n  <div className=\"header-text col-md-8\">\r\n    <div>\r\n      This Header only for loged user with admin role\r\n    </div>\r\n  </div>\r\n  <div className=\"col-md-2\">\r\n  <Dropdown>\r\n    <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n      User\r\n    </Dropdown.Toggle>\r\n\r\n\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"/\"><Link to=\"/user/dashboard\" >User Dashboard</Link></Dropdown.Item>\r\n      <Dropdown.Item href=\"/\"><Link className=\"\" to=\"/\" onClick={onLogout}>Logout</Link></Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n  </div>\r\n</div>\r\n</div>)\r\n\r\nexport default UserHeader","import React from 'react'\r\nimport { Button, Dropdown } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './Header.css'\r\n\r\nexport const PublicHeader = () => ( <div className=\"header-light transparent scroll-light container\">\r\n    <div className=\"row\">\r\n      <div className=\"col-md-2\">\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n          Menu\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"/\">Home</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      </div>\r\n      <div className=\"header-text col-md-8\">\r\n        <div>\r\n         This is public Header\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-2\">\r\n        <Link className=\"\" to=\"/login\">Login</Link> or <Link className=\"\" to=\"/register\">Register</Link>\r\n      </div>\r\n    </div>\r\n  </div>)\r\n\r\n\r\n\r\nexport default PublicHeader","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\nconst UserHeader = ({user, onLogout}:any) =>  ( <div className=\"header-light transparent scroll-light container\">\r\n<div className=\"row\">\r\n  <div className=\"col-md-2\">\r\n  <Dropdown>\r\n    <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n      Menu\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"/\">Home</Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n  </div>\r\n  <div className=\"header-text col-md-8\">\r\n    <div>\r\n      This Header only for anybody who is logged in\r\n    </div>\r\n  </div>\r\n  <div className=\"col-md-2\">\r\n  <Dropdown>\r\n    <Dropdown.Toggle variant=\"normal\" id=\"dropdown-basic\">\r\n      User\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu>\r\n      <Dropdown.Item href=\"/\"><Link to=\"/user/dashboard\" >User Dashboard</Link></Dropdown.Item>\r\n      <Dropdown.Item href=\"/\"><Link className=\"\" to=\"/\" onClick={onLogout}>Logout</Link></Dropdown.Item>\r\n    </Dropdown.Menu>\r\n  </Dropdown>\r\n  </div>\r\n</div>\r\n</div>)\r\n\r\nexport default UserHeader","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout, selectUser } from '../../app/reducers/userSlice'\r\nimport AdminHeader from './AdminHeader'\r\nimport PublicHeader from './PublicHeader'\r\nimport UserHeader from './UserHeader'\r\n\r\nexport const Header: React.FC = () => {\r\n  const user = useSelector(selectUser)\r\n  const dispatch = useDispatch()\r\n\r\n  const onLogout = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  if (user && user.token) {\r\n    if (user.roles.find((r) => r.name === 'admin')) return <AdminHeader user={user} onLogout={onLogout} />\r\n    else return <UserHeader user={user} onLogout={onLogout} />\r\n  }\r\n\r\n  return <PublicHeader />\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nexport function UserDashboard() {\r\n    return (\r\n      <div>\r\n        <h2>User Dashboard</h2>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n  export default UserDashboard","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { selectUser } from '../../app/reducers/userSlice'\r\n\r\nexport const ProtectRoute: React.FC<{ path: string, role?: string, exact?: boolean }> = ({ path, role, exact, children }) => {\r\n    const user = useSelector(selectUser)\r\n\r\n    if (role && !user?.roles.find(r => r.name == role)) {\r\n        return (<Redirect to={`/login?path=${path}&role=${role}`} />)\r\n    }\r\n\r\n    if (!user?.token) {\r\n        return (<Redirect to={`/login?path=${path}`} />)\r\n    }\r\n\r\n    return (<Route path={path} exact={exact} children={children} />)\r\n}\r\n\r\nexport default ProtectRoute","import React, {useState, useEffect, useCallback} from 'react'\r\nimport { Col, Form, Alert, Button, InputGroup, DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport './FilterItem.css'\r\n\r\nconst basicOptionsName = {\r\n    contains : 'contains',\r\n    not_contains : 'not contains',\r\n    starts_with : 'starts with',\r\n    not_starts_with : 'not starts with',\r\n    ends_with : 'ends with',\r\n    not_ends_with : 'not ends with',\r\n    isEmpty : 'is empty',\r\n}\r\n\r\ntype basicOptionsNameType = 'contains' | 'not_contains' | 'starts_with' | 'not_starts_with' | 'ends_with' | 'not_ends_with' | 'isEmpty'\r\n\r\n\r\n\r\nexport interface IFilterItemParam {\r\n    fields: any[]\r\n    onChange: (filter: string | null) => void\r\n}\r\n\r\n  \r\n\r\nexport const FilterItem: React.FC<IFilterItemParam> = ({fields, onChange}) => {\r\n    const [fieldSelected, setFieldSelected] = useState(fields[0])\r\n    const [optionSelected, setOptionSelected] = useState('contains')\r\n    const [filterText, setFilterText] = useState('')\r\n    const [filter, setFilter] = useState<string|null>('null')\r\n\r\n    const onFieldChange = (field:any) => {\r\n        console.log('onFieldChange', field)\r\n        setFieldSelected(field)\r\n        processFilter(field, optionSelected, filterText)\r\n    }\r\n\r\n    const onOptionChange = (option:any) => {\r\n        console.log('onOptionChange', option)\r\n        setOptionSelected(option)\r\n        processFilter(fieldSelected, option, filterText)\r\n    }\r\n\r\n    const onFilterChange = (e:any) => {\r\n        const text = e.target.value\r\n        console.log('onFilterChange', e, text)\r\n        setFilterText(text)\r\n        processFilter(fieldSelected, optionSelected, text)\r\n    }\r\n\r\n    const doFilter = useCallback((f: string | null) => {\r\n        if(filter != f){\r\n            console.log('useFilter>>>', f)\r\n            setFilter(f)\r\n            onChange(f)\r\n        }\r\n    }, [filter, onChange, setFilter])\r\n\r\n    const processFilter = useCallback((field, option, text) => {\r\n        if(!text && option != 'isEmpty') {\r\n            doFilter(null)\r\n            return\r\n        }\r\n\r\n        const f = {} as any\r\n        f[`${field}_${option}`] = text\r\n        doFilter(f)\r\n\r\n    }, [doFilter] )\r\n\r\n    const gc = (o:any) => {\r\n        const o2 = o\r\n        return () => {\r\n            onFieldChange(o2)\r\n        }\r\n    }\r\n\r\n    const go = (o:any) => {\r\n        const o2 = o\r\n        return () => {onOptionChange(o2);}\r\n    }\r\n\r\n\r\n    return (\r\n        <InputGroup className=\"mb-3\">\r\n            <DropdownButton\r\n                className=\"field-option\"\r\n                as={InputGroup.Prepend}\r\n                variant=\"success\"\r\n                title={fieldSelected}\r\n                id=\"input-group-dropdown-0\" >\r\n                    {fields.map((o)=> (<Dropdown.Item key={o} onClick={gc(o)}>{o.toString()}</Dropdown.Item>))}\r\n            </DropdownButton>\r\n            <DropdownButton\r\n                className=\"select-option\"\r\n                as={InputGroup.Prepend}\r\n                variant=\"outline-link\"\r\n                title={basicOptionsName[optionSelected as basicOptionsNameType]}\r\n                id=\"input-group-dropdown-1\" >\r\n                    {Object.getOwnPropertyNames(basicOptionsName).map((o)=> (<Dropdown.Item key={o} onClick={go(o)}>{basicOptionsName[o as basicOptionsNameType]}</Dropdown.Item>))}\r\n            </DropdownButton>\r\n            <Form.Control value={filterText} onChange={onFilterChange}/>\r\n        </InputGroup>)\r\n\r\n}\r\n\r\nexport default FilterItem","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from 'react-bootstrap'\r\nimport './Row.css'\r\n\r\n\r\nexport interface IFilteredFieldDesc {\r\n  name: string\r\n  title?: string\r\n  component?: React.FC<any>\r\n}\r\n\r\nexport type IFilteredField = IFilteredFieldDesc | string\r\n\r\nexport interface IListRowParams {\r\n  item: any\r\n  field: IFilteredField\r\n}\r\n\r\nconst getElementFromField = (item: any, field: IFilteredField) => {\r\n  const fieldDesc = field as IFilteredFieldDesc\r\n\r\n  const names = fieldDesc.name ? fieldDesc.name.split('.') : (field as string).split('.')\r\n  const element = item[names[0]]\r\n\r\n  return { element, name: names[0], names }\r\n}\r\n\r\nexport const ListRowItem: React.FC<IListRowParams> = ({ item, field }) => {\r\n  const { element, name, names } = getElementFromField(item, field)\r\n\r\n  if (!element) {\r\n    return (<>ERR NOT EXIST:{name}</>)\r\n  }\r\n\r\n  if ((field as IFilteredFieldDesc).component) {\r\n    const component = (field as IFilteredFieldDesc).component\r\n    return (<>{component && component({ value: element, names, item })}</>)\r\n  }\r\n\r\n  if (element.substr && element.length > 50) {\r\n    return (<>{element.substr(0, 47)}...</>)\r\n  }\r\n\r\n  if (element.push && element.reduce && names.length > 1) {\r\n    return (<>{(element as any[]).reduce((p, e) => p + e[names[1]], '')}</>)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {element}\r\n    </>\r\n  );\r\n};\r\n\r\n","import React, { useCallback, useMemo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'react-bootstrap'\r\nimport './Row.css'\r\nimport { ListRowItem, IFilteredField } from './RowItem'\r\n\r\nexport interface IListRowItem {\r\n  id: string\r\n  name: string\r\n  user: any\r\n}\r\n\r\nexport interface IListRowParams {\r\n  name: string\r\n  item: any\r\n  fields?: IFilteredField[]\r\n  onDelete: (obj: any) => void\r\n  showDelete?: boolean\r\n  onEdit?: (item: any) => void\r\n  getEditLink?: (item: unknown) => string\r\n}\r\n\r\nexport const ListRow: React.FC<IListRowParams> = ({ item, onDelete, name, fields = ['id'], showDelete = false, onEdit, getEditLink }) => {\r\n  const doEdit = useCallback(() => {\r\n    if (onEdit) onEdit(item)\r\n  }, [item, onEdit])\r\n\r\n  const editLink = useMemo(() => {\r\n    if (getEditLink) return getEditLink(item)\r\n    else return `/user/${name.toLowerCase()}/${item.id}`\r\n  }, [name, item, getEditLink])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <tr>\r\n        <td className=\"id\">{onEdit ? <span role={'link'} tabIndex={0} onKeyPress={()=>{}} onClick={doEdit}>{item.id}</span> : <Link to={editLink}>{item.id}</Link>}</td>\r\n        {fields.map(\r\n          (field) =>\r\n            field !== 'id' && (\r\n              <td>\r\n                <ListRowItem item={item} field={field} />\r\n              </td>\r\n            ),\r\n        )}\r\n        {item.user && <td>{item.user.email}</td>}\r\n\r\n        {showDelete && (\r\n          <td className=\"right\">\r\n            <Button\r\n              variant=\"danger\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                onDelete(item)\r\n              }}\r\n            >\r\n              delete\r\n            </Button>\r\n          </td>\r\n        )}\r\n      </tr>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nexport const Loading = ({what = ''}) => {\r\n    return (<div>{`Loading ${what}... `}</div>)\r\n}\r\n\r\nexport default Loading","import React, { useEffect, useState } from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\n\r\nexport interface IDeleteModalParams {\r\n  show?: boolean | string | number\r\n  onHide?: () => void\r\n  onDelete: (\r\n    deleteObjectId: IDeleteModalParams['deleteObjectId'],\r\n    deleteObjectName?: IDeleteModalParams['deleteObjectName'],\r\n  ) => void\r\n  categoryName: string\r\n  deleteObjectId?: string | number\r\n  deleteObjectName?: string\r\n  deleting?: boolean\r\n}\r\n\r\nexport const DeleteModal: React.FC<IDeleteModalParams> = ({\r\n  show = false,\r\n  onHide,\r\n  onDelete,\r\n  categoryName,\r\n  deleteObjectId,\r\n  deleteObjectName,\r\n  deleting,\r\n}) => {\r\n  const [showMe, setShowMe] = useState(show)\r\n  const [lastShow, setLastShow] = useState(show)\r\n  const onDeleteAction = () => {\r\n    if (!deleting) {\r\n      onDelete(deleteObjectId, deleteObjectName)\r\n    }\r\n  }\r\n\r\n  const onHideAction = () => {\r\n    if (onHide) {\r\n      onHide()\r\n    } else {\r\n      setShowMe(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (show !== lastShow) {\r\n      setShowMe(!!show)\r\n      setLastShow(show)\r\n    }\r\n  }, [lastShow, show, deleteObjectId])\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={showMe} onHide={onHideAction}>\r\n        <Modal.Header closeButton>\r\n          <div>\r\n            <Modal.Title>\r\n              Delete {'>>'} {deleteObjectId} {'<<'}\r\n            </Modal.Title>\r\n          </div>\r\n        </Modal.Header>\r\n\r\n        {deleteObjectId && (\r\n          <Modal.Body>\r\n            {!deleting ? (\r\n              <p>\r\n                Are you sure, you want remove {categoryName} item with\r\n                {deleteObjectName ? `name ${deleteObjectName} and ` : ''} id{' '}\r\n                <i>'{deleteObjectId}'</i>\r\n              </p>\r\n            ) : (\r\n              <p>\r\n                Removing {categoryName} item with{' '}\r\n                {deleteObjectName ? `name ${deleteObjectName} and ` : ''}\r\n                {deleteObjectId} ...\r\n              </p>\r\n            )}\r\n          </Modal.Body>\r\n        )}\r\n\r\n        <Modal.Footer>\r\n          <Button disabled={deleting} variant=\"danger\" type=\"submit\" onClick={onDeleteAction}>\r\n            Delete\r\n          </Button>\r\n          <Button disabled={deleting} variant=\"primary\" onClick={onHideAction}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeleteModal\r\n","import React from \"react\";\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nexport const Unauthorized = ({where = ''}) => {\r\n    return (<Alert variant={'danger'}>{`Unauthorized ${where} access`}</Alert>)\r\n}\r\n\r\nexport default Unauthorized","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Table as BTable, Button } from 'react-bootstrap'\r\n\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { IListRowParams, ListRow } from './Row'\r\nimport Loading from '../Loading/Loading'\r\nimport DeleteModal from '../DeleteModal/DeleteModal'\r\nimport Unauthorized from '../Unauthorized/Unauthorized'\r\nimport { DocumentNode } from 'graphql'\r\nimport { IFilteredField } from './RowItem'\r\n\r\nexport interface IFilterWithParams {\r\n  filter?: string\r\n  params?: string\r\n}\r\n\r\nexport interface ITableQueries {\r\n  ADMIN_LIST_QUERY: DocumentNode\r\n  USER_LIST_QUERY: DocumentNode\r\n  DELETE_MUTATION: DocumentNode\r\n}\r\n\r\nexport interface ITableList {\r\n  userId?: string\r\n  adminMode?: boolean\r\n  filter: any\r\n  queries: ITableQueries\r\n  fields?: IFilteredField[]\r\n  name: string\r\n  onEdit: IListRowParams['onEdit']\r\n  getEditLink?: IListRowParams['getEditLink']\r\n}\r\n\r\nexport const Table: React.FC<ITableList> = ({\r\n  filter,\r\n  name,\r\n  adminMode = false,\r\n  queries,\r\n  fields,\r\n  onEdit,\r\n  getEditLink,\r\n}) => {\r\n  const [unauthorized, setUnauthorized] = useState(false)\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false)\r\n  const [deleteObject, setDeleteObject] = useState(null)\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false)\r\n  const [deletingOnDeleteDialog, setDeletingOnDeleteDialog] = useState(false)\r\n\r\n  const [loading, setLoading] = useState(true)\r\n  const [data, setData] = useState<any>([])\r\n  const [error, setError] = useState<any>()\r\n\r\n  const { refetch: userRefetch, loading: userLoading } = useQuery(\r\n    adminMode ? queries.ADMIN_LIST_QUERY : queries.USER_LIST_QUERY,\r\n    {\r\n      onError: (e) => {\r\n        console.log('onError >>> ', e.message)\r\n        if (e.message == 'GraphQL error: Unauhorized') {\r\n          setUnauthorized(true)\r\n        } else {\r\n          setError(e)\r\n        }\r\n      },\r\n      onCompleted: (d) => {\r\n        console.log('user: onCompleted', d)\r\n        setLoading(false)\r\n\r\n        const dataFields = Object.getOwnPropertyNames(d)\r\n        if (dataFields.length > 0 && d[dataFields[0]].length > 0) {\r\n          setData(d[dataFields[0]])\r\n        } else {\r\n          setData([])\r\n        }\r\n      },\r\n      variables: { filter },\r\n    },\r\n  )\r\n\r\n  const [deleteProjectMutation, { loading: deleteLoading, error: deleteError }] = useMutation(\r\n    queries.DELETE_MUTATION,\r\n    {\r\n      errorPolicy: 'none',\r\n      onCompleted: (data: any) => {\r\n        console.log('DELETE', data.deleteProject)\r\n        onHideDidaloDelete()\r\n        userRefetch()\r\n      },\r\n      onError: (e) => {\r\n        console.log('onError >>> ', e.message)\r\n        if (e.message == 'GraphQL error: Unauhorized') {\r\n          setUnauthorized(true)\r\n        }\r\n      },\r\n    },\r\n  )\r\n\r\n  const onHideDidaloDelete = () => {\r\n    setShowDeleteDialog(false)\r\n    setDeleteObject(null)\r\n  }\r\n\r\n  const onDelete = (obj: any) => {\r\n    setDeletingOnDeleteDialog(false)\r\n    setShowDeleteDialog(true)\r\n    setDeleteObject(obj)\r\n  }\r\n\r\n  const doDelete = (deleteObject: any) => {\r\n    setDeletingOnDeleteDialog(true)\r\n    deleteProjectMutation({\r\n      variables: {\r\n        id: deleteObject.id,\r\n      },\r\n    })\r\n  }\r\n\r\n  if (unauthorized) {\r\n    return <Unauthorized where={'projects'} />\r\n  }\r\n  if (userLoading) return <Loading what={'projects'} />\r\n\r\n  return (\r\n    <div>\r\n      {error && <div>{`Error! ${error.message}`}</div>}\r\n\r\n      <BTable responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            {fields?.map((f) => f !== 'id' && <th>{(f as any).name ? (f as any).name : f}</th>)}\r\n            {adminMode && <th>User</th>}\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.length &&\r\n            data.map((projectItem: any) => (\r\n              <ListRow\r\n                name={name}\r\n                item={projectItem}\r\n                onDelete={onDelete}\r\n                fields={fields}\r\n                showDelete={adminMode}\r\n                onEdit={onEdit}\r\n                getEditLink={getEditLink}\r\n              />\r\n            ))}\r\n        </tbody>\r\n      </BTable>\r\n\r\n      <DeleteModal\r\n        show={showDeleteDialog}\r\n        onHide={onHideDidaloDelete}\r\n        onDelete={doDelete}\r\n        categoryName={'project'}\r\n        deleteObjectId={(deleteObject as any)?.id}\r\n        deleteObjectName={(deleteObject as any)?.name}\r\n        deleting={deletingOnDeleteDialog}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Table\r\n","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport FilterItem from './FilterItem'\r\nimport { Navbar, Button } from 'react-bootstrap'\r\nimport './FilteredList.css'\r\nimport { IFilteredField } from './RowItem'\r\nimport Table, { ITableList, ITableQueries } from './Table'\r\n\r\nexport interface IProjectFilterList {\r\n  name: string\r\n  userId?: string\r\n  adminMode?: boolean\r\n  queries: ITableQueries\r\n  fields: IFilteredField[]\r\n  filter?: any\r\n  onCreate?: () => void\r\n  onEdit?: ITableList['onEdit']\r\n  getEditLink?: ITableList['getEditLink']\r\n}\r\n\r\nconst createFilter = () => {\r\n  const obj: any = []\r\n  obj.name = 'AND'\r\n  return { AND: obj }\r\n}\r\n\r\nconst addAnd = (node: any, filter: any) => {\r\n  let obj: any = filter\r\n\r\n  if (node.name != 'AND') {\r\n    obj = [obj]\r\n    obj.name = 'AND'\r\n  }\r\n\r\n  node.push(obj)\r\n}\r\n\r\nconst filterDestructNode = (node: any) => {\r\n  let filter = ''\r\n\r\n  for (const n of node) {\r\n    if (n.name && n.length > 0) {\r\n      filter += `,${filterDestructNode(n)}`\r\n    } else {\r\n      filter += `,{${n.filter}}`\r\n    }\r\n  }\r\n\r\n  return `{${node.name}:[${filter.substr(1)}]}`\r\n}\r\n\r\nconst filterDestruct = (filter: any) => {\r\n  const fo = {\r\n    filter: '',\r\n    params: '',\r\n  }\r\n\r\n  fo.filter = filter.AND.length > 0 ? `(filter: ${filterDestructNode(filter.AND)})` : ''\r\n  fo.params = fo.params.length > 2 ? `(${fo.params.substr(1)})` : ''\r\n\r\n  return fo\r\n}\r\n\r\nexport const FilteredList: React.FC<IProjectFilterList> = ({ name, userId, adminMode = false, queries, fields, filter: staticFilter, onCreate, onEdit, getEditLink }) => {\r\n  const [filter, setFilter] = useState(adminMode ? createFilter() : null)\r\n  const history = useHistory()\r\n\r\n  // console.log(filter, listFilter)\r\n  const createDefaultFilter = (userId?: string) => {\r\n    const defaultFilter = createFilter()\r\n\r\n    if (userId) {\r\n      addAnd(defaultFilter.AND, { user_every: { id: userId } })\r\n    }\r\n\r\n    if (staticFilter) {\r\n      addAnd(defaultFilter.AND, staticFilter)\r\n    }\r\n\r\n    return defaultFilter\r\n  }\r\n\r\n  const processFilter = (filter: any) => {\r\n    const filterDestructed = filterDestruct(filter)\r\n\r\n    console.log('processFilter', { filter, filterDestructed })\r\n\r\n    setFilter(filter)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const defaultFilter = createDefaultFilter(userId)\r\n    processFilter(defaultFilter)\r\n  }, [userId])\r\n\r\n  const onFilterChange = useCallback(\r\n    (f: string | null) => {\r\n      const defaultFilter = createDefaultFilter(userId)\r\n\r\n      if (f) {\r\n        addAnd(defaultFilter.AND, f)\r\n      }\r\n\r\n      processFilter(defaultFilter)\r\n    },\r\n    [userId],\r\n  )\r\n\r\n  const onCreateNew = () => {\r\n    if (onCreate) onCreate()\r\n    else history.push('/user/' + name.toLowerCase() + '/create')\r\n  }\r\n\r\n  // if is not adminMode,\r\n  // the useEffect will update filter with user after render\r\n  // but in render is already called the query\r\n  // but the query will call without properly setuped filter and return unauthorized\r\n  if (!adminMode && !filter) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"base-filtered-list\">\r\n      <section>\r\n        <h1>{name}</h1>\r\n        <div className=\"row-head\">\r\n          <FilterItem fields={fields} onChange={onFilterChange} />\r\n          <div></div>\r\n        </div>\r\n        <div className=\"row-table\">\r\n          <Table name={name} filter={filter} queries={queries} adminMode={adminMode} fields={fields} onEdit={onEdit} getEditLink={getEditLink} />\r\n          <Button onClick={onCreateNew}>Create New</Button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilteredList\r\n","import { useMutation, useQuery } from '@apollo/client'\r\nimport React, { useCallback, useState } from 'react'\r\nimport Loading from '../Loading/Loading'\r\nimport Unauthorized from '../Unauthorized/Unauthorized'\r\n\r\nexport const getDataFromRaw = (rawData: any) => {\r\n  const rawName = Object.keys(rawData)[0]\r\n  return rawData[rawName]\r\n}\r\n\r\nexport const Editor = ({ name, form, id, renameError, onUpdated, updateCache, query, children }: any) => {\r\n  const [localId, setLocalId] = useState(id !== 'create' ? id : undefined)\r\n  const [unauthorized, setUnauthorized] = useState(false)\r\n  const [errors, setErrors] = useState<string[] | null>([])\r\n\r\n  const [storedData, setStoredData] = useState({})\r\n\r\n  const handleError = (incommingError: { message: string }) => {\r\n    let incomingErrors = incommingError.message.split('\\n')\r\n    if (renameError) {\r\n      incomingErrors = incomingErrors.map((error) => renameError(error))\r\n    }\r\n    setErrors(incomingErrors)\r\n  }\r\n\r\n  const updateDataFromLoaded = (loadedDataRaw: any) => {\r\n    if (!loadedDataRaw) {\r\n      return\r\n    }\r\n\r\n    const loadedData = getDataFromRaw(loadedDataRaw)\r\n\r\n    if (loadedData) {\r\n      setStoredData({ ...loadedData })\r\n    } else {\r\n      setUnauthorized(true)\r\n    }\r\n  }\r\n\r\n  const onCompleted = (raw: any) => {\r\n    const data = getDataFromRaw(raw)\r\n    setLocalId(data.id)\r\n    setErrors(null)\r\n    if (onUpdated) onUpdated(raw)\r\n  }\r\n\r\n  const skipLoading = !localId\r\n  const { loading, error } = useQuery(query.QUERY, {\r\n    variables: { id: localId },\r\n    skip: skipLoading,\r\n    onCompleted: (loadedDataRaw: any) => {\r\n      updateDataFromLoaded(loadedDataRaw)\r\n    },\r\n    onError: (e) => {\r\n      if (e.message == 'GraphQL error: Unauhorized') {\r\n        setUnauthorized(true)\r\n      }\r\n    },\r\n  })\r\n\r\n  const [createProjectMutation] = useMutation(query.CREATE_MUTATION, {\r\n    errorPolicy: 'none',\r\n    onCompleted: onCompleted,\r\n    update: updateCache,\r\n    onError: handleError,\r\n  })\r\n\r\n  const [updateProjectMutation] = useMutation(query.UPDATE_MUTATION, {\r\n    errorPolicy: 'none',\r\n    onCompleted: onCompleted,\r\n    update: updateCache,\r\n    onError: handleError,\r\n  })\r\n\r\n  // const onSubmit = (data:any) => {\r\n  //   console.log(data)\r\n  // }\r\n\r\n  const onSubmit = useCallback(\r\n    (data) => {\r\n      if (localId) {\r\n        setErrors(null)\r\n        updateProjectMutation({\r\n          variables: {\r\n            id: localId,\r\n            ...data,\r\n          },\r\n        })\r\n      } else {\r\n        createProjectMutation({\r\n          variables: {\r\n            userId: localStorage.getItem('user.id'),\r\n            ...data,\r\n          },\r\n        })\r\n      }\r\n    },\r\n    [localId, storedData],\r\n  )\r\n\r\n  if (unauthorized) {\r\n    return <Unauthorized where={`${name} edit`} />\r\n  }\r\n\r\n  if (loading) {\r\n    return <Loading what={name} />\r\n  }\r\n\r\n  return <div>{children(storedData, onSubmit, errors)}</div>\r\n}\r\n\r\nexport default Editor\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { DropdownButton, Dropdown, Form } from \"react-bootstrap\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { getDataFromRaw } from \"../Editor/Editor\";\r\n\r\nexport const ConnectBase: React.FC<{value:any, names?:any, gql: any, item: any}> = ({value, names, gql, item}) => {\r\n    const element = value\r\n    const name = names.length>1 && names[1]\r\n    const elementTitle = element.push && element.reduce && names.length > 1 ? (element as any[]).reduce((p, e)=>p + `, ${e[name]}`, '').substr(2) : element\r\n  \r\n    const [title, setTitle] = useState(elementTitle)\r\n    const [data, setData] = useState<any[]>([])\r\n  \r\n    const { refetch: userRefetch, loading: userLoading } = useQuery(gql.QUERY, {\r\n      onError: (e) => {\r\n        console.log('ConnectBase:onError >>> ', e.message)\r\n        if(e.message == 'GraphQL error: Unauhorized'){\r\n          // setUnauthorized(true)\r\n        } else {\r\n          // setError(e)\r\n        }\r\n      }, onCompleted: (iraw) => {\r\n        console.log('user: onCompleted', iraw)\r\n        // setLoading(false)\r\n\r\n        const dataFields = Object.getOwnPropertyNames(iraw)\r\n        if(dataFields.length > 0 && iraw[dataFields[0]].length > 0){\r\n          const raw = iraw[dataFields[0]]\r\n  \r\n          const final = raw.map((r:any)=>{\r\n            return {\r\n              id: r.id,\r\n              checked: title.indexOf(r[name]) !== -1,\r\n              label: r[name]\r\n            }\r\n          })\r\n  \r\n          setData(final)\r\n        } else {\r\n          setData([])\r\n        }\r\n        \r\n      },\r\n    });\r\n  \r\n    const [\r\n      addMutation,\r\n      { loading: addMutaionLoading, data: addMutationData, error: addMutationError }\r\n    ] = useMutation(gql.ADD, {\r\n      errorPolicy: \"none\",\r\n      onCompleted: (raw: any) => {\r\n        const data = getDataFromRaw(raw)\r\n        console.log(\"ADDED\", raw, data.id);\r\n      },\r\n      onError: () => {}\r\n    });\r\n  \r\n    const [\r\n      removeMutation,\r\n      { loading: removeMutaionLoading, data: removeMutationData, error: removeMutationError }\r\n    ] = useMutation(gql.REMOVE, {\r\n      errorPolicy: \"none\",\r\n      onCompleted: (raw: any) => {\r\n        const data = getDataFromRaw(raw)\r\n        console.log(\"REMOVE\", raw, data.id);\r\n      },\r\n      onError: () => {}\r\n    });\r\n  \r\n    const onChecked = (value:any) => {\r\n      const updated = data.map((d:any)=>{\r\n        if(d.label === value.label) {\r\n          d.checked = !d.checked\r\n        }\r\n        return {...d}\r\n      })\r\n  \r\n      const updateTitle = (updated as any[]).reduce((p, e) => {\r\n        if(e.checked) return `${p}, ${e.label}`\r\n        else return p\r\n      }, '').substr(1)\r\n  \r\n      console.log('onChecked:', {updated, value, updateTitle})\r\n  \r\n      if(value.checked){\r\n        addMutation({\r\n          variables: {\r\n            id1: value.id,\r\n            id2: item.id\r\n          }\r\n        });\r\n      } else {\r\n        removeMutation({\r\n          variables: {\r\n            id1: value.id,\r\n            id2: item.id\r\n          }\r\n        });\r\n      }\r\n      \r\n  \r\n      setData(updated)\r\n      setTitle(updateTitle)\r\n    }\r\n    \r\n    // if(element.push && element.reduce && names.length > 1) {\r\n    //   return (<>ahoj: {(element as any[]).reduce((p, e)=>p + e[names[1]], '')}</>)\r\n    // }\r\n  \r\n    return (<DropdownButton id=\"dropdown-basic-button\" title={title}>\r\n        {data && data.map((d:any)=>(\r\n        <Dropdown.Item  onClick={(e:any) => onChecked(d)} >\r\n          <Form.Check \r\n              type=\"checkbox\" \r\n              label={d.label} \r\n              checked={d.checked} />\r\n        </Dropdown.Item>))\r\n        }\r\n      </DropdownButton>)\r\n  }\r\n\r\n  export default ConnectBase","import React from \"react\";\r\nimport gql from 'graphql-tag';\r\nimport FilteredList from \"../../../components/List/FilteredList\";\r\nimport ConnectBase from \"../../../components/List/ConnectBase\";\r\nimport { loader } from \"graphql.macro\";\r\n\r\nconst QUERY_ALL_USERS_ADMIN = loader('./graphql/query-all-user-admin.gql')\r\nconst USER_ROLE_QUERY = loader('./graphql/query-all-user-role.gql')\r\nconst MUTATION_ADD_USER_ROLE_TO_USER = loader('./graphql/mutation-add-user-role-to-user.gql')\r\nconst MUTATION_REMOVE_USER_ROLE_FROM_USER = loader('./graphql/mutation-remove-user-role-from-user.gql')\r\nconst MUTATION_REMOVE_USER = loader('./graphql/mutation-remove-user.gql')\r\nconst USER_LIST_QUERY = gql`\r\n{allUser{id}}`;\r\n\r\nconst ConnectRole: React.FC<{ value: any, names?: any, item: any }> = ({ value, names, item }) => {\r\n\r\n  const gql = {\r\n    QUERY: USER_ROLE_QUERY,\r\n    ADD: MUTATION_ADD_USER_ROLE_TO_USER,\r\n    REMOVE: MUTATION_REMOVE_USER_ROLE_FROM_USER\r\n  }\r\n\r\n  return <ConnectBase value={value} names={names} gql={gql} item={item} />\r\n}\r\n\r\nexport const UsersList: React.FC<{ userId?: string, adminMode?: boolean }> = ({ userId, adminMode = false }) => {\r\n  return (\r\n    <div>\r\n      <FilteredList\r\n        name={'Users'}\r\n        fields={['email', 'password', { name: 'roles.name', component: ConnectRole }, 'roles.id']}\r\n        userId={userId}\r\n        adminMode={adminMode}\r\n        queries={{ USER_LIST_QUERY, ADMIN_LIST_QUERY: QUERY_ALL_USERS_ADMIN, DELETE_MUTATION: MUTATION_REMOVE_USER }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList","import React, { useState, useEffect } from \"react\";\r\nimport FilteredList from \"../../../components/List/FilteredList\";\r\nimport gql from 'graphql-tag';\r\nimport { loader } from \"graphql.macro\";\r\n\r\nconst USER_LIST_QUERY = loader('./graphql/query-all-user-role-admin.gql')\r\nconst ADMIN_LIST_QUERY = loader('./graphql/query-all-user-role-admin.gql')\r\nconst DELETE_MUTATION = loader('./graphql/mutation-remove-user-role.gql')\r\n\r\nexport const UserRoleList: React.FC<{ userId?: string, adminMode?: boolean }> = ({ userId, adminMode = false }) => {\r\n  return (\r\n    <div>\r\n      <FilteredList\r\n        name={'Roles'}\r\n        fields={['name']}\r\n        userId={userId}\r\n        adminMode={adminMode}\r\n        queries={{ USER_LIST_QUERY, ADMIN_LIST_QUERY, DELETE_MUTATION }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserRoleList","import React, { useEffect } from 'react'\r\nimport { Form, FormControl } from 'react-bootstrap'\r\n\r\nexport const Control = ({name, storedData, label, required, register, placeholder, formState, setValue}:any) => {\r\n    const {errors, touchedFields, dirtyFields} = formState\r\n    const error = (errors && errors[name])\r\n    const touched = touchedFields && touchedFields[name]\r\n    const dirty = dirtyFields && dirtyFields[name]\r\n    \r\n    useEffect(()=>{\r\n      if(storedData && storedData[name]) setValue(name, storedData[name])\r\n    },[storedData])\r\n  \r\n    return (\r\n      <React.Fragment >\r\n        <Form.Group controlId={`form-${name}`}>\r\n            <Form.Label>{label} {required && '*'}</Form.Label>\r\n            <Form.Control\r\n                type=\"text\"\r\n                placeholder={placeholder}\r\n                {...register(name as any, {required})}\r\n                \r\n                isInvalid={error}\r\n                /* isValid={dirty && !error} */\r\n              />\r\n            \r\n            <FormControl.Feedback type=\"valid\">\r\n              Perfect!\r\n            </FormControl.Feedback>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid {label}.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n\r\n  export default Control","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport * as _ from 'lodash'\r\nimport gql from \"graphql-tag\";\r\n\r\nimport Editor from \"../../../components/Editor/Editor\"\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { useForm } from 'react-hook-form'\r\nimport Control from \"../../../components/Editor/Control\";\r\nimport { loader } from \"graphql.macro\";\r\n\r\nconst CREATE_MUTATION = loader('./graphql/mutation-create-user-role.gql')\r\nconst UPDATE_MUTATION = loader('./graphql//mutation-update-user-role.gql')\r\nconst QUERY = loader('./graphql/query-user-role.gql')\r\n\r\nconst UserRoleForm = ({ storedData, onSubmit, userRoleId, graphQlError }: any) => {\r\n  const reactForm = useForm()\r\n  const { register, handleSubmit, formState, setValue, getValues, watch } = reactForm\r\n  return (<Form onSubmit={handleSubmit(onSubmit)}>\r\n    <Control name={'name'} label={'Role name'} required={true} storedData={storedData} {...reactForm} />\r\n    <Button type=\"submit\">Save</Button>\r\n  </Form>)\r\n}\r\n\r\nexport const UserRoleEdit = (data: any) => {\r\n  const { id } = useParams() as { id: string }\r\n\r\n  return (\r\n    <>\r\n      <Editor\r\n        id={id}\r\n        name={'UserRole'}\r\n        fields={['role']}\r\n        query={{\r\n          CREATE_MUTATION,\r\n          UPDATE_MUTATION,\r\n          QUERY\r\n        }}\r\n      >\r\n        {(storedData: any, onSubmit: any, errors: any) => <UserRoleForm storedData={storedData} onSubmit={onSubmit} graphQlError={errors} userRoleId={id} />}\r\n      </Editor>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRoleEdit","import { useMutation, useQuery } from '@apollo/client'\r\nimport { loader } from 'graphql.macro'\r\nimport React, { useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport DeleteModal, { IDeleteModalParams } from '../../../components/DeleteModal/DeleteModal'\r\nimport Loading from '../../../components/Loading/Loading'\r\n// import { Counter } from './features/counter/Counter';\r\nimport './Home.css'\r\nimport { Post, TPostModel } from './Post'\r\n\r\nconst CREATE_MUTATION = loader('./graphql/create.gql')\r\nconst ALL_QUERY = loader('./graphql/all.gql')\r\nconst REMOVE_MUTATION = loader('./graphql/remove.gql')\r\n\r\nconst Posts = () => {\r\n  // const posts: Post[] = [{ text: \"Initial post \" }];\r\n  const [posts, setPosts] = useState<TPostModel[]>([])\r\n  const [text, setText] = useState<string>('')\r\n  const [postForRemoveId, setPostForRemoveId] = useState<TPostModel['id']>()\r\n\r\n  const [createPost] = useMutation(CREATE_MUTATION)\r\n  const { data, loading, error, refetch } = useQuery(ALL_QUERY)\r\n  const [removePost] = useMutation(REMOVE_MUTATION)\r\n\r\n  const addPost = async () => {\r\n    setText('')\r\n    await createPost({ variables: { text } })\r\n    refetch()\r\n  }\r\n\r\n  const onTextChange = (event: any) => {\r\n    setText(event.target.value)\r\n    //text = event.target.value;\r\n  }\r\n\r\n  const showDeleteModal = (id: TPostModel['id']) => {\r\n    setPostForRemoveId(id)\r\n  }\r\n\r\n  const onDelete: IDeleteModalParams['onDelete'] = async (id) => {\r\n    await removePost({ variables: { id } })\r\n    setPostForRemoveId(undefined)\r\n    refetch()\r\n  }\r\n\r\n  const onDeleteModalHide = () => {\r\n    setPostForRemoveId(undefined)\r\n  }\r\n\r\n  if (loading) {\r\n    return <Loading />\r\n  }\r\n\r\n  if (error) {\r\n    return <>{`Error! ${error}`}</>\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h4>Add Post</h4>\r\n      <input type=\"text\" value={text} onChange={onTextChange} />\r\n      <Button onClick={addPost}>Add Post</Button>\r\n\r\n      <h4>Post</h4>\r\n      {data?.allPost?.map((post: any, idx: number) => (\r\n        <div key={idx}>\r\n          {post.id} {post.text}{' '}\r\n          <Button\r\n            size={'sm'}\r\n            variant={'danger'}\r\n            onClick={() => {\r\n              showDeleteModal(post.id)\r\n            }}\r\n          >\r\n            Remove\r\n          </Button>\r\n        </div>\r\n      ))}\r\n\r\n      <DeleteModal\r\n        show={!!postForRemoveId}\r\n        categoryName={'Posts'}\r\n        onDelete={onDelete}\r\n        onHide={onDeleteModalHide}\r\n        deleteObjectId={postForRemoveId}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n","import React, { useEffect } from 'react'\r\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom'\r\nimport { ApolloProvider } from '@apollo/client'\r\n\r\nimport Register from './pages/public/Login/Register'\r\nimport Login from './pages/public/Login/Login'\r\nimport ForgottenPassword from './pages/public/Login/ForgottenPassword'\r\nimport ForgottenPasswordReset from './pages/public/Login/ForgottenPasswordReset'\r\nimport VerifyUser from './pages/public/Login/VerifyUser'\r\nimport { PassportCallback } from './pages/public/Login/PassportCallback'\r\n\r\nimport Home from './pages/public/Home/Home'\r\nimport Header from './components/Header/Header'\r\nimport UserDashboard from './pages/user/UserDashboard/UserDashboard'\r\nimport ProtectedRoute from './components/ProtectedRoute/ProtectedRoute'\r\nimport UsersList from './pages/admin/Users/UsersList'\r\nimport UserRolesList from './pages/admin/UserRoles/UserRolesList'\r\nimport UserRoleEdit from './pages/admin/UserRoles/UserRolesEdit'\r\nimport Posts from './pages/user/Posts/Posts'\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      {/*\r\n              A <Switch> looks through all its children <Route>\r\n              elements and renders the first one whose path\r\n              matches the current URL. Use a <Switch> any time\r\n              you have multiple routes, but you want only one\r\n              of them to render at a time\r\n            */}\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/posts\">\r\n          <Posts />\r\n        </Route>\r\n        <Route exact path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/login/facebook\">\r\n          <PassportCallback type={'facebook'} />\r\n        </Route>\r\n        <Route path=\"/login/github\">\r\n          <PassportCallback type={'github'} />\r\n        </Route>\r\n        <Route path=\"/login/google\">\r\n          <PassportCallback type={'google'} />\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          <Register />\r\n        </Route>\r\n\r\n        <Route path=\"/forgotten-password/:token\" component={ForgottenPasswordReset} />\r\n        <Route exact path=\"/forgotten-password\">\r\n          <ForgottenPassword />\r\n        </Route>\r\n\r\n        <Route path=\"/verify-user/:verifyToken\" component={VerifyUser} />\r\n\r\n        <ProtectedRoute path=\"/user/dashboard\">\r\n          <UserDashboard />\r\n        </ProtectedRoute>\r\n        <Route path=\"/user/info\">{/* <UserInfo /> */}</Route>\r\n\r\n        <ProtectedRoute path=\"/admin/users\" role={'admin'}>\r\n          <UsersList adminMode={true} />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path=\"/admin/roles\" role={'admin'}>\r\n          <UserRolesList adminMode={true} />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path=\"/user/roles/:id\" role={'admin'} children={<UserRoleEdit />} />\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\r\nimport userReducer from './reducers/userSlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n})\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nexport const refreshToken = async () => {\r\n    const userId = localStorage.getItem('user.id')\r\n    const token = localStorage.getItem('user.token')\r\n    const refreshToken = localStorage.getItem('user.refreshToken')\r\n    return axios.post(`${process.env.REACT_APP_HOST}/graphql`, {\r\n        query: `\r\n            mutation refreshToken($userId: ID!, $token: String!, $refreshToken:String!){\r\n                refreshToken_v1(userId: $userId, token: $token, refreshToken:$refreshToken){\r\n                    token,\r\n                    refreshToken\r\n                }\r\n            }\r\n        `,\r\n        variables: {\r\n            userId,\r\n            token,\r\n            refreshToken\r\n        }\r\n    })\r\n}","import { ApolloClient, InMemoryCache, createHttpLink, ApolloLink, fromPromise } from '@apollo/client'\r\nimport { setContext } from '@apollo/client/link/context'\r\nimport { onError } from '@apollo/client/link/error'\r\nimport { refreshToken } from './refreshToken'\r\nimport { RetryLink } from '@apollo/client/link/retry'\r\n\r\nconst retryLink = new RetryLink({\r\n  attempts: (count, operation, error) => {\r\n    return true\r\n  },\r\n  delay: (count, operation, error) => {\r\n    return count * 1000 * Math.random()\r\n  },\r\n})\r\n\r\nlet isRefreshing = false\r\nlet pendingRequests: any = []\r\n\r\nconst resolvePendingRequests = () => {\r\n  //@ts-ignore\r\n  pendingRequests.map((callback) => callback())\r\n  pendingRequests = []\r\n}\r\n\r\n// https://able.bio/AnasT/apollo-graphql-async-access-token-refresh--470t1c8\r\nconst unautheniticatedAction = (forward: any, operation: any) => {\r\n  // error code is set to UNAUTHENTICATED\r\n  // when AuthenticationError thrown in resolver\r\n  let forward$\r\n\r\n  if (!isRefreshing) {\r\n    isRefreshing = true\r\n    forward$ = fromPromise(\r\n      refreshToken()\r\n        // @ts-ignore\r\n        .then(({ data }) => {\r\n          const {\r\n            data: { refreshToken_v1 },\r\n          } = data\r\n          localStorage.setItem('user.token', refreshToken_v1.token)\r\n          localStorage.setItem('user.refreshToken', refreshToken_v1.refreshToken)\r\n\r\n          // Store the new tokens for your auth link\r\n          resolvePendingRequests()\r\n          const oldHeaders = operation.getContext().headers\r\n          // modify the operation context with a new token\r\n          operation.setContext({\r\n            headers: {\r\n              ...oldHeaders,\r\n              authorization: `Bearer ${refreshToken_v1.token}`,\r\n            },\r\n          })\r\n          return forward(operation)\r\n        })\r\n        .catch((error) => {\r\n          pendingRequests = []\r\n          // Handle token refresh errors e.g clear stored tokens, redirect to login, ...\r\n          return\r\n        })\r\n        .finally(() => {\r\n          isRefreshing = false\r\n        }),\r\n    ).filter((value) => Boolean(value))\r\n  } else {\r\n    // Will only emit once the Promise is resolved\r\n    forward$ = fromPromise(\r\n      new Promise((resolve) => {\r\n        // @ts-ignore\r\n        pendingRequests.push(() => resolve())\r\n      }),\r\n    )\r\n  }\r\n\r\n  // @ts-ignore\r\n  return forward$.flatMap(() => {\r\n    return forward(operation)\r\n  })\r\n}\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('user.token')\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  }\r\n})\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: `${process.env.REACT_APP_HOST}`,\r\n})\r\n\r\n// @ts-ignore\r\nconst erroLink = onError(({ graphQLErrors, networkError, operation, forward }) => {\r\n  if (graphQLErrors) graphQLErrors.map(({ message, locations, path }) => console.log(`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`))\r\n\r\n  if (graphQLErrors && graphQLErrors?.length > 0 && graphQLErrors[0].message == 'Unauthorized') {\r\n    // @ts-ignore\r\n    return unautheniticatedAction(forward, operation)\r\n  }\r\n\r\n  if (networkError) console.log(`[Network error]: ${networkError}`)\r\n})\r\n\r\nexport const apolloClient = new ApolloClient({\r\n  link: ApolloLink.from([retryLink, erroLink, authLink, httpLink]),\r\n  cache: new InMemoryCache(),\r\n  defaultOptions: {\r\n    watchQuery: {\r\n      errorPolicy: 'none',\r\n    },\r\n    query: {\r\n      errorPolicy: 'none',\r\n    },\r\n    mutate: {\r\n      errorPolicy: 'all',\r\n    },\r\n  },\r\n})\r\n\r\nexport default apolloClient\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { store } from './app/store'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { ApolloProvider } from '@apollo/client'\r\nimport apolloClient from './app/apolloClient'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ApolloProvider client={apolloClient}>\r\n        <BrowserRouter basename={process.env.REACT_APP_BASENAME}>\r\n          <App />\r\n        </BrowserRouter>\r\n      </ApolloProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}